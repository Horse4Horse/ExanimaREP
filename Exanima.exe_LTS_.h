/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'Exanima.exe_LTS_'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct HWND__;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
union _LARGE_INTEGER;
struct _devicemodeA;
struct _POINTL;
struct tagRECT;
struct tagWNDCLASSA;
struct HINSTANCE__;
struct HICON__;
struct HBRUSH__;
struct _SHFILEINFOA;
struct _ICONINFO;
struct HBITMAP__;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _SYSTEMTIME;
struct tagVARIANT;
struct IUnknown;
struct IUnknownVtbl;
struct _GUID;
struct IDispatch;
struct IDispatchVtbl;
struct ITypeInfo;
struct ITypeInfoVtbl;
struct tagTYPEATTR;
struct tagARRAYDESC;
struct ITypeComp;
struct ITypeCompVtbl;
union tagBINDPTR;
struct tagFUNCDESC;
struct tagELEMDESC;
struct tagPARAMDESCEX;
struct tagDISPPARAMS;
struct tagEXCEPINFO;
struct ITypeLib;
struct ITypeLibVtbl;
struct tagTLIBATTR;
struct tagSAFEARRAY;
struct tagDEC;
struct IRecordInfoVtbl;
struct TGUIForm_vmt_struct;
struct TAControlArray;
struct TAByte;
struct TGeometry_vmt_struct;
struct TMesh;
struct TObject;
struct TAA3i;
struct TAdword;
struct TAFace;
struct TAFaceVRef;
struct TAnInt;
struct TAVertexMapping;
struct TAInt;
struct TAVertexData;
struct TMesh_vmt_struct;
struct T3DNode_vmt_struct;
struct TAA2f;
struct TAA2w;
struct TAA3f;
struct TAGridEntry;
struct TAA4b;
struct TAMeshModifier;
struct TCursorAction;
struct TSGContainerItem;
struct TPhysicsControlller;
struct TPhysPrioHandle;

/* 1 */
struct RUNTIME_FUNCTION
{
  void *__ptr32 FunctionStart;
  void *__ptr32 FunctionEnd;
  void *__ptr32 UnwindInfo;
};

/* 2 */
struct UNWIND_INFO_HDR
{
  char Ver3_Flags;
  char PrologSize;
  char CntUnwindCodes;
  char FrReg_FrRegOff;
};

/* 3 */
struct UNWIND_CODE
{
  char PrologOff;
  char OpCode_OpInfo;
};

/* 5 */
typedef HWND__ *HWND;

/* 7 */
typedef unsigned int UINT;

/* 9 */
typedef unsigned int UINT_PTR;

/* 8 */
typedef UINT_PTR WPARAM;

/* 11 */
typedef int LONG_PTR;

/* 10 */
typedef LONG_PTR LPARAM;

/* 12 */
typedef unsigned int DWORD;

/* 15 */
typedef int LONG;

/* 14 */
struct tagPOINT
{
  LONG x;
  LONG y;
};

/* 13 */
typedef struct tagPOINT POINT;

/* 4 */
struct tagMSG
{
  HWND hwnd;
  UINT message;
  WPARAM wParam;
  LPARAM lParam;
  DWORD time;
  POINT pt;
};

/* 6 */
struct HWND__
{
  int unused;
};

/* 17 */
typedef char CHAR;

/* 16 */
struct _OSVERSIONINFOA
{
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  CHAR szCSDVersion[128];
};

/* 21 */
typedef unsigned __int16 WORD;

/* 20 */
struct _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::$AA04DEB0C6383F89F13D312A174572A9
{
  WORD wProcessorArchitecture;
  WORD wReserved;
};

/* 19 */
union _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F
{
  DWORD dwOemId;
  struct
  {
    WORD wProcessorArchitecture;
    WORD wReserved;
  };
};

/* 22 */
typedef void *LPVOID;

/* 24 */
typedef unsigned int ULONG_PTR;

/* 23 */
typedef ULONG_PTR DWORD_PTR;

/* 18 */
struct _SYSTEM_INFO
{
  union
  {
    DWORD dwOemId;
    struct
    {
      WORD wProcessorArchitecture;
      WORD wReserved;
    };
  };
  DWORD dwPageSize;
  LPVOID lpMinimumApplicationAddress;
  LPVOID lpMaximumApplicationAddress;
  DWORD_PTR dwActiveProcessorMask;
  DWORD dwNumberOfProcessors;
  DWORD dwProcessorType;
  DWORD dwAllocationGranularity;
  WORD wProcessorLevel;
  WORD wProcessorRevision;
};

/* 26 */
typedef int BOOL;

/* 25 */
struct _SECURITY_ATTRIBUTES
{
  DWORD nLength;
  LPVOID lpSecurityDescriptor;
  BOOL bInheritHandle;
};

/* 28 */
typedef unsigned __int8 BYTE;

/* 29 */
typedef unsigned __int64 DWORD64;

/* 32 */
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY *PRUNTIME_FUNCTION;

/* 31 */
struct _UNWIND_HISTORY_TABLE_ENTRY
{
  DWORD64 ImageBase;
  PRUNTIME_FUNCTION FunctionEntry;
};

/* 30 */
typedef struct _UNWIND_HISTORY_TABLE_ENTRY UNWIND_HISTORY_TABLE_ENTRY;

/* 27 */
struct _UNWIND_HISTORY_TABLE
{
  DWORD Count;
  BYTE LocalHint;
  BYTE GlobalHint;
  BYTE Search;
  BYTE Once;
  DWORD64 LowAddress;
  DWORD64 HighAddress;
  UNWIND_HISTORY_TABLE_ENTRY Entry[12];
};

/* 3302 */
#pragma pack(push, 4)
union _IMAGE_RUNTIME_FUNCTION_ENTRY::$1178E7E5993F82C3DB2AA3AA02D8BBF8
{
  DWORD UnwindInfoAddress;
  DWORD UnwindData;
};
#pragma pack(pop)

/* 33 */
#pragma pack(push, 4)
struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  DWORD BeginAddress;
  DWORD EndAddress;
  #pragma pack(push, 4)
  union
  {
    DWORD UnwindInfoAddress;
    DWORD UnwindData;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 34 */
#pragma pack(push, 4)
union _IMAGE_RUNTIME_FUNCTION_ENTRY::$1FC7DDE9AB0EB2C3B18F286E3EAA9FDE
{
  DWORD UnwindInfoAddress;
  DWORD UnwindData;
};
#pragma pack(pop)

/* 42 */
typedef unsigned __int64 ULONGLONG;

/* 43 */
typedef __int64 LONGLONG;

/* 41 */
struct __declspec(align(16)) _M128A
{
  ULONGLONG Low;
  LONGLONG High;
};

/* 40 */
typedef struct _M128A M128A;

/* 39 */
struct __declspec(align(16)) _XSAVE_FORMAT
{
  WORD ControlWord;
  WORD StatusWord;
  BYTE TagWord;
  BYTE Reserved1;
  WORD ErrorOpcode;
  DWORD ErrorOffset;
  WORD ErrorSelector;
  WORD Reserved2;
  DWORD DataOffset;
  WORD DataSelector;
  WORD Reserved3;
  DWORD MxCsr;
  DWORD MxCsr_Mask;
  M128A FloatRegisters[8];
  M128A XmmRegisters[16];
  BYTE Reserved4[96];
};

/* 38 */
typedef struct _XSAVE_FORMAT XSAVE_FORMAT;

/* 37 */
typedef XSAVE_FORMAT XMM_SAVE_AREA32;

/* 44 */
struct _CONTEXT::$D2ECA93702C646ACAFACD524BE9E8FEB::$897D11C01F73F7E79A06B0B9ED9B9414
{
  M128A Header[2];
  M128A Legacy[8];
  M128A Xmm0;
  M128A Xmm1;
  M128A Xmm2;
  M128A Xmm3;
  M128A Xmm4;
  M128A Xmm5;
  M128A Xmm6;
  M128A Xmm7;
  M128A Xmm8;
  M128A Xmm9;
  M128A Xmm10;
  M128A Xmm11;
  M128A Xmm12;
  M128A Xmm13;
  M128A Xmm14;
  M128A Xmm15;
};

/* 36 */
union _CONTEXT::$D2ECA93702C646ACAFACD524BE9E8FEB
{
  XMM_SAVE_AREA32 FltSave;
  struct
  {
    M128A Header[2];
    M128A Legacy[8];
    M128A Xmm0;
    M128A Xmm1;
    M128A Xmm2;
    M128A Xmm3;
    M128A Xmm4;
    M128A Xmm5;
    M128A Xmm6;
    M128A Xmm7;
    M128A Xmm8;
    M128A Xmm9;
    M128A Xmm10;
    M128A Xmm11;
    M128A Xmm12;
    M128A Xmm13;
    M128A Xmm14;
    M128A Xmm15;
  };
};

/* 35 */
struct __declspec(align(16)) _CONTEXT
{
  DWORD64 P1Home;
  DWORD64 P2Home;
  DWORD64 P3Home;
  DWORD64 P4Home;
  DWORD64 P5Home;
  DWORD64 P6Home;
  DWORD ContextFlags;
  DWORD MxCsr;
  WORD SegCs;
  WORD SegDs;
  WORD SegEs;
  WORD SegFs;
  WORD SegGs;
  WORD SegSs;
  DWORD EFlags;
  DWORD64 Dr0;
  DWORD64 Dr1;
  DWORD64 Dr2;
  DWORD64 Dr3;
  DWORD64 Dr6;
  DWORD64 Dr7;
  DWORD64 Rax;
  DWORD64 Rcx;
  DWORD64 Rdx;
  DWORD64 Rbx;
  DWORD64 Rsp;
  DWORD64 Rbp;
  DWORD64 Rsi;
  DWORD64 Rdi;
  DWORD64 R8;
  DWORD64 R9;
  DWORD64 R10;
  DWORD64 R11;
  DWORD64 R12;
  DWORD64 R13;
  DWORD64 R14;
  DWORD64 R15;
  DWORD64 Rip;
  union
  {
    XMM_SAVE_AREA32 FltSave;
    struct
    {
      M128A Header[2];
      M128A Legacy[8];
      M128A Xmm0;
      M128A Xmm1;
      M128A Xmm2;
      M128A Xmm3;
      M128A Xmm4;
      M128A Xmm5;
      M128A Xmm6;
      M128A Xmm7;
      M128A Xmm8;
      M128A Xmm9;
      M128A Xmm10;
      M128A Xmm11;
      M128A Xmm12;
      M128A Xmm13;
      M128A Xmm14;
      M128A Xmm15;
    };
  };
  M128A VectorRegister[26];
  DWORD64 VectorControl;
  DWORD64 DebugControl;
  DWORD64 LastBranchToRip;
  DWORD64 LastBranchFromRip;
  DWORD64 LastExceptionToRip;
  DWORD64 LastExceptionFromRip;
};

/* 46 */
typedef CHAR *LPSTR;

/* 47 */
typedef BYTE *LPBYTE;

/* 48 */
typedef void *HANDLE;

/* 45 */
struct _STARTUPINFOA
{
  DWORD cb;
  LPSTR lpReserved;
  LPSTR lpDesktop;
  LPSTR lpTitle;
  DWORD dwX;
  DWORD dwY;
  DWORD dwXSize;
  DWORD dwYSize;
  DWORD dwXCountChars;
  DWORD dwYCountChars;
  DWORD dwFillAttribute;
  DWORD dwFlags;
  WORD wShowWindow;
  WORD cbReserved2;
  LPBYTE lpReserved2;
  HANDLE hStdInput;
  HANDLE hStdOutput;
  HANDLE hStdError;
};

/* 50 */
typedef void *PVOID;

/* 51 */
typedef ULONG_PTR SIZE_T;

/* 49 */
struct _MEMORY_BASIC_INFORMATION
{
  PVOID BaseAddress;
  PVOID AllocationBase;
  DWORD AllocationProtect;
  SIZE_T RegionSize;
  DWORD State;
  DWORD Protect;
  DWORD Type;
};

/* 52 */
typedef union _LARGE_INTEGER LARGE_INTEGER;

/* 54 */
struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E
{
  DWORD LowPart;
  LONG HighPart;
};

/* 53 */
union _LARGE_INTEGER
{
  struct
  {
    DWORD LowPart;
    LONG HighPart;
  };
  struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E u;
  LONGLONG QuadPart;
};

/* 55 */
typedef struct _devicemodeA DEVMODEA;

/* 56 */
struct _devicemodeA
{
  BYTE dmDeviceName[32];
  WORD dmSpecVersion;
  WORD dmDriverVersion;
  WORD dmSize;
  WORD dmDriverExtra;
  DWORD dmFields;
  union #4312;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  BYTE dmFormName[32];
  WORD dmLogPixels;
  DWORD dmBitsPerPel;
  DWORD dmPelsWidth;
  DWORD dmPelsHeight;
  union #3300;
  DWORD dmDisplayFrequency;
  DWORD dmICMMethod;
  DWORD dmICMIntent;
  DWORD dmMediaType;
  DWORD dmDitherType;
  DWORD dmReserved1;
  DWORD dmReserved2;
  DWORD dmPanningWidth;
  DWORD dmPanningHeight;
};

/* 60 */
typedef struct _POINTL POINTL;

/* 61 */
struct _POINTL
{
  LONG x;
  LONG y;
};

/* 63 */
typedef struct tagRECT RECT;

/* 64 */
struct tagRECT
{
  LONG left;
  LONG top;
  LONG right;
  LONG bottom;
};

/* 65 */
typedef struct tagWNDCLASSA WNDCLASSA;

/* 68 */
typedef LONG_PTR LRESULT;

/* 67 */
typedef LRESULT (__stdcall *WNDPROC)(HWND, UINT, WPARAM, LPARAM);

/* 69 */
typedef HINSTANCE__ *HINSTANCE;

/* 71 */
typedef HICON__ *HICON;

/* 73 */
typedef HICON HCURSOR;

/* 74 */
typedef HBRUSH__ *HBRUSH;

/* 76 */
typedef const CHAR *LPCSTR;

/* 66 */
struct tagWNDCLASSA
{
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
};

/* 70 */
struct HINSTANCE__
{
  int unused;
};

/* 72 */
struct HICON__
{
  int unused;
};

/* 75 */
struct HBRUSH__
{
  int unused;
};

/* 79 */
struct _FILETIME
{
  DWORD dwLowDateTime;
  DWORD dwHighDateTime;
};

/* 78 */
typedef struct _FILETIME FILETIME;

/* 77 */
struct _WIN32_FIND_DATAA
{
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD dwReserved0;
  DWORD dwReserved1;
  CHAR cFileName[260];
  CHAR cAlternateFileName[14];
};

/* 80 */
typedef struct _SHFILEINFOA SHFILEINFOA;

/* 81 */
#pragma pack(push, 1)
struct _SHFILEINFOA
{
  HICON hIcon;
  int iIcon;
  DWORD dwAttributes;
  CHAR szDisplayName[260];
  CHAR szTypeName[80];
};
#pragma pack(pop)

/* 84 */
struct tagBITMAPINFOHEADER
{
  DWORD biSize;
  LONG biWidth;
  LONG biHeight;
  WORD biPlanes;
  WORD biBitCount;
  DWORD biCompression;
  DWORD biSizeImage;
  LONG biXPelsPerMeter;
  LONG biYPelsPerMeter;
  DWORD biClrUsed;
  DWORD biClrImportant;
};

/* 83 */
typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;

/* 86 */
struct tagRGBQUAD
{
  BYTE rgbBlue;
  BYTE rgbGreen;
  BYTE rgbRed;
  BYTE rgbReserved;
};

/* 85 */
typedef struct tagRGBQUAD RGBQUAD;

/* 82 */
struct tagBITMAPINFO
{
  BITMAPINFOHEADER bmiHeader;
  RGBQUAD bmiColors[1];
};

/* 87 */
typedef struct _ICONINFO ICONINFO;

/* 89 */
typedef HBITMAP__ *HBITMAP;

/* 88 */
struct _ICONINFO
{
  BOOL fIcon;
  DWORD xHotspot;
  DWORD yHotspot;
  HBITMAP hbmMask;
  HBITMAP hbmColor;
};

/* 90 */
struct HBITMAP__
{
  int unused;
};

/* 92 */
typedef _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 91 */
#pragma pack(push, 8)
struct _RTL_CRITICAL_SECTION
{
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
  LONG LockCount;
  LONG RecursionCount;
  HANDLE OwningThread;
  HANDLE LockSemaphore;
  ULONG_PTR SpinCount;
};
#pragma pack(pop)

/* 95 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 94 */
typedef _LIST_ENTRY LIST_ENTRY;

/* 93 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  WORD Type;
  WORD CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  LIST_ENTRY ProcessLocksList;
  DWORD EntryCount;
  DWORD ContentionCount;
  DWORD Flags;
  WORD CreatorBackTraceIndexHigh;
  WORD SpareWORD;
};

/* 96 */
typedef struct _SYSTEMTIME SYSTEMTIME;

/* 97 */
struct _SYSTEMTIME
{
  WORD wYear;
  WORD wMonth;
  WORD wDayOfWeek;
  WORD wDay;
  WORD wHour;
  WORD wMinute;
  WORD wSecond;
  WORD wMilliseconds;
};

/* 98 */
struct _cpinfo
{
  UINT MaxCharSize;
  BYTE DefaultChar[2];
  BYTE LeadByte[12];
};

/* 100 */
typedef tagVARIANT VARIANT;

/* 99 */
typedef VARIANT VARIANTARG;

/* 101 */
#pragma pack(push, 8)
struct tagVARIANT
{
  union #4309;
};
#pragma pack(pop)

/* 104 */
typedef unsigned __int16 VARTYPE;

/* 106 */
typedef __int16 SHORT;

/* 107 */
typedef float FLOAT;

/* 108 */
typedef double DOUBLE;

/* 109 */
typedef __int16 VARIANT_BOOL;

/* 110 */
typedef LONG SCODE;

/* 112 */
union tagCY
{
  struct #3466;
  LONGLONG int64;
};

/* 111 */
typedef union tagCY CY;

/* 115 */
typedef double DATE;

/* 119 */
typedef unsigned __int16 wchar_t;

/* 118 */
typedef wchar_t WCHAR;

/* 117 */
typedef WCHAR OLECHAR;

/* 116 */
typedef OLECHAR *BSTR;

/* 185 */
typedef tagSAFEARRAY SAFEARRAY;

/* 142 */
typedef unsigned __int16 USHORT;

/* 114 */
typedef unsigned int ULONG;

/* 174 */
typedef int INT;

/* 187 */
typedef struct tagDEC DECIMAL;

/* 105 */
#pragma pack(push, 8)
union tagVARIANT::$::$65D68C826D16CA47CF95571D7BFCD657::$E09503A454170B491AC1C4312CE36FE6
{
  LONGLONG llVal;
  LONG lVal;
  BYTE bVal;
  SHORT iVal;
  FLOAT fltVal;
  DOUBLE dblVal;
  VARIANT_BOOL boolVal;
  SCODE scode;
  CY cyVal;
  DATE date;
  BSTR bstrVal;
  IUnknown *punkVal;
  IDispatch *pdispVal;
  SAFEARRAY *parray;
  BYTE *pbVal;
  SHORT *piVal;
  LONG *plVal;
  LONGLONG *pllVal;
  FLOAT *pfltVal;
  DOUBLE *pdblVal;
  VARIANT_BOOL *pboolVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  BSTR *pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  SAFEARRAY **pparray;
  VARIANT *pvarVal;
  PVOID byref;
  CHAR cVal;
  USHORT uiVal;
  ULONG ulVal;
  ULONGLONG ullVal;
  INT intVal;
  UINT uintVal;
  DECIMAL *pdecVal;
  CHAR *pcVal;
  USHORT *puiVal;
  ULONG *pulVal;
  ULONGLONG *pullVal;
  INT *pintVal;
  UINT *puintVal;
  struct #193;
};
#pragma pack(pop)

/* 103 */
#pragma pack(push, 8)
struct tagVARIANT::$E93DC971A089CC95F6C875332324C1E7::$65D68C826D16CA47CF95571D7BFCD657
{
  VARTYPE vt;
  WORD wReserved1;
  WORD wReserved2;
  WORD wReserved3;
  #pragma pack(push, 8)
  union
  {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    BSTR bstrVal;
    IUnknown *punkVal;
    IDispatch *pdispVal;
    SAFEARRAY *parray;
    BYTE *pbVal;
    SHORT *piVal;
    LONG *plVal;
    LONGLONG *pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    BSTR *pbstrVal;
    IUnknown **ppunkVal;
    IDispatch **ppdispVal;
    SAFEARRAY **pparray;
    VARIANT *pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL *pdecVal;
    CHAR *pcVal;
    USHORT *puiVal;
    ULONG *pulVal;
    ULONGLONG *pullVal;
    INT *pintVal;
    UINT *puintVal;
    struct #193;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 188 */
struct tagDEC
{
  USHORT wReserved;
  union #4315;
  ULONG Hi32;
  union #4316;
};

/* 102 */
#pragma pack(push, 8)
union tagVARIANT::$E93DC971A089CC95F6C875332324C1E7
{
  #pragma pack(push, 8)
  struct
  {
    VARTYPE vt;
    WORD wReserved1;
    WORD wReserved2;
    WORD wReserved3;
    #pragma pack(push, 8)
    union
    {
      LONGLONG llVal;
      LONG lVal;
      BYTE bVal;
      SHORT iVal;
      FLOAT fltVal;
      DOUBLE dblVal;
      VARIANT_BOOL boolVal;
      SCODE scode;
      CY cyVal;
      DATE date;
      BSTR bstrVal;
      IUnknown *punkVal;
      IDispatch *pdispVal;
      SAFEARRAY *parray;
      BYTE *pbVal;
      SHORT *piVal;
      LONG *plVal;
      LONGLONG *pllVal;
      FLOAT *pfltVal;
      DOUBLE *pdblVal;
      VARIANT_BOOL *pboolVal;
      SCODE *pscode;
      CY *pcyVal;
      DATE *pdate;
      BSTR *pbstrVal;
      IUnknown **ppunkVal;
      IDispatch **ppdispVal;
      SAFEARRAY **pparray;
      VARIANT *pvarVal;
      PVOID byref;
      CHAR cVal;
      USHORT uiVal;
      ULONG ulVal;
      ULONGLONG ullVal;
      INT intVal;
      UINT uintVal;
      DECIMAL *pdecVal;
      CHAR *pcVal;
      USHORT *puiVal;
      ULONG *pulVal;
      ULONGLONG *pullVal;
      INT *pintVal;
      UINT *puintVal;
      struct #193;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
  DECIMAL decVal;
};
#pragma pack(pop)

/* 120 */
#pragma pack(push, 8)
struct IUnknown
{
  IUnknownVtbl *lpVtbl;
};
#pragma pack(pop)

/* 126 */
#pragma pack(push, 8)
struct IDispatch
{
  IDispatchVtbl *lpVtbl;
};
#pragma pack(pop)

/* 144 */
#pragma pack(push, 8)
struct tagSAFEARRAYBOUND
{
  ULONG cElements;
  LONG lLbound;
};
#pragma pack(pop)

/* 143 */
typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

/* 186 */
#pragma pack(push, 8)
struct tagSAFEARRAY
{
  USHORT cDims;
  USHORT fFeatures;
  ULONG cbElements;
  ULONG cLocks;
  PVOID pvData;
  SAFEARRAYBOUND rgsabound[1];
};
#pragma pack(pop)

/* 125 */
typedef int HRESULT;

/* 123 */
typedef _GUID GUID;

/* 122 */
typedef GUID IID;

/* 121 */
#pragma pack(push, 8)
struct IUnknownVtbl
{
  HRESULT (__stdcall *QueryInterface)(IUnknown *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IUnknown *This);
  ULONG (__stdcall *Release)(IUnknown *This);
};
#pragma pack(pop)

/* 128 */
typedef DWORD LCID;

/* 135 */
typedef OLECHAR *LPOLESTR;

/* 134 */
typedef LONG DISPID;

/* 175 */
typedef tagDISPPARAMS DISPPARAMS;

/* 177 */
typedef tagEXCEPINFO EXCEPINFO;

/* 127 */
#pragma pack(push, 8)
struct IDispatchVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDispatch *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IDispatch *This);
  ULONG (__stdcall *Release)(IDispatch *This);
  HRESULT (__stdcall *GetTypeInfoCount)(IDispatch *This, UINT *pctinfo);
  HRESULT (__stdcall *GetTypeInfo)(IDispatch *This, UINT iTInfo, LCID lcid, ITypeInfo **ppTInfo);
  HRESULT (__stdcall *GetIDsOfNames)(IDispatch *This, const IID *const riid, LPOLESTR *rgszNames, UINT cNames, LCID lcid, DISPID *rgDispId);
  HRESULT (__stdcall *Invoke)(IDispatch *This, DISPID dispIdMember, const IID *const riid, LCID lcid, WORD wFlags, DISPPARAMS *pDispParams, VARIANT *pVarResult, EXCEPINFO *pExcepInfo, UINT *puArgErr);
};
#pragma pack(pop)

/* 124 */
struct _GUID
{
  int Data1;
  __int16 Data2;
  __int16 Data3;
  char Data4[8];
};

/* 129 */
#pragma pack(push, 8)
struct ITypeInfo
{
  ITypeInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 176 */
#pragma pack(push, 8)
struct tagDISPPARAMS
{
  VARIANTARG *rgvarg;
  DISPID *rgdispidNamedArgs;
  UINT cArgs;
  UINT cNamedArgs;
};
#pragma pack(pop)

/* 178 */
#pragma pack(push, 8)
struct tagEXCEPINFO
{
  WORD wCode;
  WORD wReserved;
  BSTR bstrSource;
  BSTR bstrDescription;
  BSTR bstrHelpFile;
  DWORD dwHelpContext;
  PVOID pvReserved;
  HRESULT (__stdcall *pfnDeferredFillIn)(tagEXCEPINFO *);
  SCODE scode;
};
#pragma pack(pop)

/* 131 */
typedef tagTYPEATTR TYPEATTR;

/* 154 */
typedef tagFUNCDESC FUNCDESC;

/* 169 */
typedef #170 VARDESC;

/* 133 */
typedef DISPID MEMBERID;

/* 145 */
typedef DWORD HREFTYPE;

/* 166 */
enum tagINVOKEKIND
{
  INVOKE_FUNC = 0x1,
  INVOKE_PROPERTYGET = 0x2,
  INVOKE_PROPERTYPUT = 0x4,
  INVOKE_PROPERTYPUTREF = 0x8,
};

/* 165 */
typedef tagINVOKEKIND INVOKEKIND;

/* 130 */
#pragma pack(push, 8)
struct ITypeInfoVtbl
{
  HRESULT (__stdcall *QueryInterface)(ITypeInfo *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ITypeInfo *This);
  ULONG (__stdcall *Release)(ITypeInfo *This);
  HRESULT (__stdcall *GetTypeAttr)(ITypeInfo *This, TYPEATTR **ppTypeAttr);
  HRESULT (__stdcall *GetTypeComp)(ITypeInfo *This, ITypeComp **ppTComp);
  HRESULT (__stdcall *GetFuncDesc)(ITypeInfo *This, UINT index, FUNCDESC **ppFuncDesc);
  HRESULT (__stdcall *GetVarDesc)(ITypeInfo *This, UINT index, VARDESC **ppVarDesc);
  HRESULT (__stdcall *GetNames)(ITypeInfo *This, MEMBERID memid, BSTR *rgBstrNames, UINT cMaxNames, UINT *pcNames);
  HRESULT (__stdcall *GetRefTypeOfImplType)(ITypeInfo *This, UINT index, HREFTYPE *pRefType);
  HRESULT (__stdcall *GetImplTypeFlags)(ITypeInfo *This, UINT index, INT *pImplTypeFlags);
  HRESULT (__stdcall *GetIDsOfNames)(ITypeInfo *This, LPOLESTR *rgszNames, UINT cNames, MEMBERID *pMemId);
  HRESULT (__stdcall *Invoke)(ITypeInfo *This, PVOID pvInstance, MEMBERID memid, WORD wFlags, DISPPARAMS *pDispParams, VARIANT *pVarResult, EXCEPINFO *pExcepInfo, UINT *puArgErr);
  HRESULT (__stdcall *GetDocumentation)(ITypeInfo *This, MEMBERID memid, BSTR *pBstrName, BSTR *pBstrDocString, DWORD *pdwHelpContext, BSTR *pBstrHelpFile);
  HRESULT (__stdcall *GetDllEntry)(ITypeInfo *This, MEMBERID memid, INVOKEKIND invKind, BSTR *pBstrDllName, BSTR *pBstrName, WORD *pwOrdinal);
  HRESULT (__stdcall *GetRefTypeInfo)(ITypeInfo *This, HREFTYPE hRefType, ITypeInfo **ppTInfo);
  HRESULT (__stdcall *AddressOfMember)(ITypeInfo *This, MEMBERID memid, INVOKEKIND invKind, PVOID *ppv);
  HRESULT (__stdcall *CreateInstance)(ITypeInfo *This, IUnknown *pUnkOuter, const IID *const riid, PVOID *ppvObj);
  HRESULT (__stdcall *GetMops)(ITypeInfo *This, MEMBERID memid, BSTR *pBstrMops);
  HRESULT (__stdcall *GetContainingTypeLib)(ITypeInfo *This, ITypeLib **ppTLib, UINT *pIndex);
  void (__stdcall *ReleaseTypeAttr)(ITypeInfo *This, TYPEATTR *pTypeAttr);
  void (__stdcall *ReleaseFuncDesc)(ITypeInfo *This, FUNCDESC *pFuncDesc);
  void (__stdcall *ReleaseVarDesc)(ITypeInfo *This, VARDESC *pVarDesc);
};
#pragma pack(pop)

/* 137 */
enum tagTYPEKIND
{
  TKIND_ENUM = 0x0,
  TKIND_RECORD = 0x1,
  TKIND_MODULE = 0x2,
  TKIND_INTERFACE = 0x3,
  TKIND_DISPATCH = 0x4,
  TKIND_COCLASS = 0x5,
  TKIND_ALIAS = 0x6,
  TKIND_UNION = 0x7,
  TKIND_MAX = 0x8,
};

/* 136 */
typedef tagTYPEKIND TYPEKIND;

/* 139 */
#pragma pack(push, 8)
struct tagTYPEDESC
{
  union #3457;
  VARTYPE vt;
};
#pragma pack(pop)

/* 138 */
typedef tagTYPEDESC TYPEDESC;

/* 147 */
#pragma pack(push, 8)
struct tagIDLDESC
{
  ULONG_PTR dwReserved;
  USHORT wIDLFlags;
};
#pragma pack(pop)

/* 146 */
typedef tagIDLDESC IDLDESC;

/* 132 */
#pragma pack(push, 8)
struct tagTYPEATTR
{
  GUID guid;
  LCID lcid;
  DWORD dwReserved;
  MEMBERID memidConstructor;
  MEMBERID memidDestructor;
  LPOLESTR lpstrSchema;
  ULONG cbSizeInstance;
  TYPEKIND typekind;
  WORD cFuncs;
  WORD cVars;
  WORD cImplTypes;
  WORD cbSizeVft;
  WORD cbAlignment;
  WORD wTypeFlags;
  WORD wMajorVerNum;
  WORD wMinorVerNum;
  TYPEDESC tdescAlias;
  IDLDESC idldescType;
};
#pragma pack(pop)

/* 148 */
#pragma pack(push, 8)
struct ITypeComp
{
  ITypeCompVtbl *lpVtbl;
};
#pragma pack(pop)

/* 156 */
typedef tagELEMDESC ELEMDESC;

/* 168 */
enum tagCALLCONV
{
  CC_FASTCALL = 0x0,
  CC_CDECL = 0x1,
  CC_MSCPASCAL = 0x2,
  CC_PASCAL = 0x2,
  CC_MACPASCAL = 0x3,
  CC_STDCALL = 0x4,
  CC_FPFASTCALL = 0x5,
  CC_SYSCALL = 0x6,
  CC_MPWCDECL = 0x7,
  CC_MPWPASCAL = 0x8,
  CC_MAX = 0x9,
};

/* 167 */
typedef tagCALLCONV CALLCONV;

/* 157 */
#pragma pack(push, 8)
struct tagELEMDESC
{
  TYPEDESC tdesc;
  union #3477;
};
#pragma pack(pop)

/* 155 */
#pragma pack(push, 8)
struct tagFUNCDESC
{
  MEMBERID memid;
  SCODE *lprgscode;
  ELEMDESC *lprgelemdescParam;
  #163 funckind;
  INVOKEKIND invkind;
  CALLCONV callconv;
  SHORT cParams;
  SHORT cParamsOpt;
  SHORT oVft;
  SHORT cScodes;
  ELEMDESC elemdescFunc;
  WORD wFuncFlags;
};
#pragma pack(pop)

/* 179 */
#pragma pack(push, 8)
struct ITypeLib
{
  ITypeLibVtbl *lpVtbl;
};
#pragma pack(pop)

/* 151 */
enum tagDESCKIND
{
  DESCKIND_NONE = 0x0,
  DESCKIND_FUNCDESC = 0x1,
  DESCKIND_VARDESC = 0x2,
  DESCKIND_TYPECOMP = 0x3,
  DESCKIND_IMPLICITAPPOBJ = 0x4,
  DESCKIND_MAX = 0x5,
};

/* 150 */
typedef tagDESCKIND DESCKIND;

/* 152 */
typedef tagBINDPTR BINDPTR;

/* 149 */
#pragma pack(push, 8)
struct ITypeCompVtbl
{
  HRESULT (__stdcall *QueryInterface)(ITypeComp *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ITypeComp *This);
  ULONG (__stdcall *Release)(ITypeComp *This);
  HRESULT (__stdcall *Bind)(ITypeComp *This, LPOLESTR szName, ULONG lHashVal, WORD wFlags, ITypeInfo **ppTInfo, DESCKIND *pDescKind, BINDPTR *pBindPtr);
  HRESULT (__stdcall *BindType)(ITypeComp *This, LPOLESTR szName, ULONG lHashVal, ITypeInfo **ppTInfo, ITypeComp **ppTComp);
};
#pragma pack(pop)

/* 181 */
typedef tagTLIBATTR TLIBATTR;

/* 180 */
#pragma pack(push, 8)
struct ITypeLibVtbl
{
  HRESULT (__stdcall *QueryInterface)(ITypeLib *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ITypeLib *This);
  ULONG (__stdcall *Release)(ITypeLib *This);
  UINT (__stdcall *GetTypeInfoCount)(ITypeLib *This);
  HRESULT (__stdcall *GetTypeInfo)(ITypeLib *This, UINT index, ITypeInfo **ppTInfo);
  HRESULT (__stdcall *GetTypeInfoType)(ITypeLib *This, UINT index, TYPEKIND *pTKind);
  HRESULT (__stdcall *GetTypeInfoOfGuid)(ITypeLib *This, const GUID *const guid, ITypeInfo **ppTinfo);
  HRESULT (__stdcall *GetLibAttr)(ITypeLib *This, TLIBATTR **ppTLibAttr);
  HRESULT (__stdcall *GetTypeComp)(ITypeLib *This, ITypeComp **ppTComp);
  HRESULT (__stdcall *GetDocumentation)(ITypeLib *This, INT index, BSTR *pBstrName, BSTR *pBstrDocString, DWORD *pdwHelpContext, BSTR *pBstrHelpFile);
  HRESULT (__stdcall *IsName)(ITypeLib *This, LPOLESTR szNameBuf, ULONG lHashVal, BOOL *pfName);
  HRESULT (__stdcall *FindName)(ITypeLib *This, LPOLESTR szNameBuf, ULONG lHashVal, ITypeInfo **ppTInfo, MEMBERID *rgMemId, USHORT *pcFound);
  void (__stdcall *ReleaseTLibAttr)(ITypeLib *This, TLIBATTR *pTLibAttr);
};
#pragma pack(pop)

/* 153 */
#pragma pack(push, 8)
union tagBINDPTR
{
  FUNCDESC *lpfuncdesc;
  VARDESC *lpvardesc;
  ITypeComp *lptcomp;
};
#pragma pack(pop)

/* 184 */
enum tagSYSKIND
{
  SYS_WIN16 = 0x0,
  SYS_WIN32 = 0x1,
  SYS_MAC = 0x2,
  SYS_WIN64 = 0x3,
};

/* 183 */
typedef tagSYSKIND SYSKIND;

/* 182 */
#pragma pack(push, 8)
struct tagTLIBATTR
{
  GUID guid;
  LCID lcid;
  SYSKIND syskind;
  WORD wMajorVerNum;
  WORD wMinorVerNum;
  WORD wLibFlags;
};
#pragma pack(pop)

/* 113 */
struct tagCY::$3EA7BC8C29B528C7CA1203FC489E132F
{
  ULONG Lo;
  LONG Hi;
};

/* 140 */
#pragma pack(push, 8)
union tagTYPEDESC::$AC700B6542D8071E244CADABF8A32897
{
  struct tagTYPEDESC *lptdesc;
  struct tagARRAYDESC *lpadesc;
  HREFTYPE hreftype;
};
#pragma pack(pop)

/* 141 */
#pragma pack(push, 8)
struct tagARRAYDESC
{
  TYPEDESC tdescElem;
  USHORT cDims;
  SAFEARRAYBOUND rgbounds[1];
};
#pragma pack(pop)

/* 161 */
typedef tagPARAMDESCEX *LPPARAMDESCEX;

/* 160 */
#pragma pack(push, 8)
struct tagPARAMDESC
{
  LPPARAMDESCEX pparamdescex;
  USHORT wParamFlags;
};
#pragma pack(pop)

/* 159 */
typedef tagPARAMDESC PARAMDESC;

/* 158 */
#pragma pack(push, 8)
union tagELEMDESC::$7C8F4CED1424251743D09680A1A0B07D
{
  IDLDESC idldesc;
  PARAMDESC paramdesc;
};
#pragma pack(pop)

/* 162 */
#pragma pack(push, 8)
struct tagPARAMDESCEX
{
  ULONG cBytes;
  VARIANTARG varDefaultValue;
};
#pragma pack(pop)

/* 164 */
enum tagFUNCKIND
{
  FUNC_VIRTUAL = 0x0,
  FUNC_PUREVIRTUAL = 0x1,
  FUNC_NONVIRTUAL = 0x2,
  FUNC_STATIC = 0x3,
  FUNC_DISPATCH = 0x4,
};

/* 173 */
enum tagVARKIND
{
  VAR_PERINSTANCE = 0x0,
  VAR_STATIC = 0x1,
  VAR_CONST = 0x2,
  VAR_DISPATCH = 0x3,
};

/* 172 */
typedef tagVARKIND VARKIND;

/* 194 */
#pragma pack(push, 8)
struct IRecordInfo
{
  IRecordInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 196 */
typedef const OLECHAR *LPCOLESTR;

/* 195 */
#pragma pack(push, 8)
struct IRecordInfoVtbl
{
  HRESULT (__stdcall *QueryInterface)(IRecordInfo *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRecordInfo *This);
  ULONG (__stdcall *Release)(IRecordInfo *This);
  HRESULT (__stdcall *RecordInit)(IRecordInfo *This, PVOID pvNew);
  HRESULT (__stdcall *RecordClear)(IRecordInfo *This, PVOID pvExisting);
  HRESULT (__stdcall *RecordCopy)(IRecordInfo *This, PVOID pvExisting, PVOID pvNew);
  HRESULT (__stdcall *GetGuid)(IRecordInfo *This, GUID *pguid);
  HRESULT (__stdcall *GetName)(IRecordInfo *This, BSTR *pbstrName);
  HRESULT (__stdcall *GetSize)(IRecordInfo *This, ULONG *pcbSize);
  HRESULT (__stdcall *GetTypeInfo)(IRecordInfo *This, ITypeInfo **ppTypeInfo);
  HRESULT (__stdcall *GetField)(IRecordInfo *This, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField);
  HRESULT (__stdcall *GetFieldNoCopy)(IRecordInfo *This, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField, PVOID *ppvDataCArray);
  HRESULT (__stdcall *PutField)(IRecordInfo *This, ULONG wFlags, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField);
  HRESULT (__stdcall *PutFieldNoCopy)(IRecordInfo *This, ULONG wFlags, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField);
  HRESULT (__stdcall *GetFieldNames)(IRecordInfo *This, ULONG *pcNames, BSTR *rgBstrNames);
  BOOL (__stdcall *IsMatchingType)(IRecordInfo *This, IRecordInfo *pRecordInfo);
  PVOID (__stdcall *RecordCreate)(IRecordInfo *This);
  HRESULT (__stdcall *RecordCreateCopy)(IRecordInfo *This, PVOID pvSource, PVOID *ppvDest);
  HRESULT (__stdcall *RecordDestroy)(IRecordInfo *This, PVOID pvRecord);
};
#pragma pack(pop)

/* 4353 */
enum FormStyle_ENUM : __int8
{
  FormStyle_ShowCaption = 0x1,
  FormStyle_ShowCross = 0x2,
  FormStyle_ShowShadow = 0x64,
};

/* 199 */
struct TGUIForm
{
  TGUIForm_vmt_struct *FormVMT;
  int CAp0;
  int CAp1;
  float HS_Stp;
  char _GAP_14[4];
  int StoreState;
  char _GAP_1C[4];
  __int32 PosX;
  int PosY;
  __int32 Width;
  __int32 Height;
  int Border;
  int BorderEx;
  int BorderIn;
  int ClientBtm;
  int ClientTop;
  int ClientRgt;
  int ClientSpcX;
  int ClientSpcY;
  int BaseBorder;
  int MinHeight;
  int MinWidth;
  int Style;
  int State;
  FormStyle_ENUM FormStyle;
  char SpcType;
  char FormStyleEx;
  char _GAP_67;
  int HitCode;
  int CaptureCode;
  int FocusCode;
  char _GAP_74[4];
  char CaptureHit;
  char FVisible;
  char _GAP_7A[6];
  void *pCaption;
  char _GAP_88[8];
  signed __int32 Controls;
  char _GAP_94[4];
  TAControlArray *pControl;
  void *pParent;
  int Children;
  char _GAP_AC[4];
  void *pChild;
  int FormClassID;
  char _GAP_BC[4];
  void *Owner;
  int ClntQds;
  char _GAP_CC[4];
  void *pClntQd;
  int HS_Pos;
  int VS_Pos;
  float VS_Stp;
  char _GAP_E4[4];
  void *BkCol0;
  void *BkCol1;
  char _GAP_F8[8];
  __int32 Glyph;
  char _GAP_104[4];
  void *pOnClose;
  void *pOnScroll;
  char OwnsControls;
  char FreeOnClose;
  char Closing;
  char WantsFree;
  char AniState;
  char _GAP_11D[3];
  __int64 AniTime;
  void *AniType;
  void *Task;
  int ModalResult;
  char padding[28];
};

/* 3236 */
struct TGUIForm_vmt_struct
{
  __int64 FormAllocSize;
  __int64 FormAllocSizeInverted;
  int *pFormTypeParent;
  char *pFormName;
  void *field_20;
  void *field_28;
  void *field_30;
  __int64 *field_38;
  __int64 *ObjectDynArraysInfo;
  void *field_48;
  void *field_50;
  void *field_58;
  __int64 *Destroy;
  __int64 *NewInstance;
  __int64 *FreeInstance;
  __int64 *SafeCallException;
  __int64 *field_80;
  __int64 *AfterConstruction;
  __int64 *field_90;
  __int64 *field_98;
  __int64 *field_A0;
  __int64 *field_A8;
  __int64 *field_B0;
  __int64 *field_B8;
  __int64 *field_C0;
  __int64 *field_C8;
  __int64 *field_D0;
  __int64 *field_D8;
  __int64 *QueryDragDrop;
  __int64 *DoDragDrop;
  __int64 *DragDropped;
  __int64 *AssignControls;
  __int64 *DragDrop;
  __int64 *CalcSizes;
  __int64 *OnScaleUI;
  __int64 *SetVScroll;
  __int64 *GetHitCode;
  void *SetHitCode;
  void *field_130;
  void *CursorActivate;
  void *CursorDeactivate;
  void *CursorMove;
  void *field_150;
  void *field_158;
  void *field_160;
  void *TimerActivate;
  void *FocusTimer;
  void *SetFocusCode;
  void *WheelScroll;
  void *MsgKeyDown;
  void *Draw;
  void *DrawPage;
  void *DrawClient;
  void *FadeEffect;
  void *Show;
  void *Hide;
  __int64 *field_1C0;
  char Name[16];
  void *CurrentVMT;
};

/* 4352 */
struct TGUIControl
{
  unsigned __int16 CntrlClass;
  unsigned __int16 ControlID;
  signed __int16 px;
  signed __int16 py;
  signed __int16 wdt;
  signed __int16 hgt;
  signed __int16 brd;
  unsigned __int16 GroupID;
  __int64 *FCaption;
  int Style;
  int State;
  __int64 *Parent;
  __int64 *OnChange;
  __int64 *MsgProc;
  unsigned __int32 value;
  unsigned __int32 iDat0;
  __int64 *iDat1;
  unsigned __int32 iDat3;
  unsigned __int32 iDat4;
  int Valf;
  float CD0f;
  float CD1f;
  float CD2f;
  int field_60;
  int field_64;
};

/* 4351 */
struct TAControlArray
{
  TGUIControl Control[];
};

/* 203 */
struct TTextBox
{
  _BYTE gap0[8];
  __int16 CAp0;
  __declspec(align(4)) __int16 CAp1;
  int HS_Stp;
  __declspec(align(8)) int StoreState;
  __declspec(align(8)) int PosX;
  int PosY;
  int Width;
  int Height;
  int Border;
  int BorderEx;
  int BorderIn;
  int ClientBtm;
  int ClientTop;
  int ClientRgt;
  int ClientSpcX;
  int ClientSpcY;
  int BaseBorder;
  int MinHeight;
  int MinWidth;
  int Style;
  int State;
  char FormStyle;
  char SpcType;
  char FormStyleEx;
  int HitCode;
  int CaptureCode;
  int FocusCode;
  __declspec(align(8)) char CaptureHit;
  char FVisible;
  __int64 pCaption;
  _BYTE gap88[8];
  __int32 Controls;
  __int64 pControl;
  __int64 pParent;
  int Children;
  __int64 pChild;
  int FormClassID;
  __int64 Owner;
  int ClntQds;
  __int64 pClntQd;
  int HS_Pos;
  int VS_Pos;
  int VS_Stp;
  __int64 BkCol0;
  __int64 BkCol1;
  _BYTE gapF8[8];
  int Glyph;
  __int64 pOnClose;
  __int64 pOnScroll;
  char OwnsControls;
  char FreeOnClose;
  char Closing;
  char WantsFree;
  char AniState;
  __int64 AniTime;
  __int64 AniType;
  __int64 Task;
  int ModalResult;
  char padding[28];
};

/* 204 */
struct TConfirmDlg_vmt
{
  __int64 FormAllocSize;
  __int64 field_8;
  __int64 pFormTypeParent;
  __int64 pFormName;
  __int64 Empty;
  __int64 field_28;
  __int64 field_30;
  __int64 field_38;
  __int64 field_40;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  __int64 field_60;
  __int64 New;
  __int64 field_70;
  __int64 field_78;
  __int64 field_80;
  __int64 field_88;
  __int64 field_90;
  __int64 field_98;
  __int64 field_A0;
  __int64 field_A8;
  __int64 field_B0;
  __int64 field_B8;
  __int64 field_C0;
  __int64 field_C8;
  __int64 field_D0;
  __int64 field_D8;
  __int64 field_E0;
  __int64 field_E8;
  __int64 field_F0;
  __int64 field_F8;
  __int64 field_100;
  __int64 field_108;
  __int64 field_110;
  __int64 field_118;
  __int64 field_120;
  __int64 field_128;
  __int64 field_130;
  __int64 field_138;
  __int64 field_140;
  __int64 field_148;
  __int64 field_150;
  __int64 field_158;
  __int64 field_160;
  __int64 field_168;
  __int64 field_170;
  __int64 field_178;
  __int64 field_180;
  __int64 field_188;
  __int64 field_190;
  __int64 field_198;
  __int64 field_1A0;
  __int64 field_1A8;
  __int64 field_1B0;
  __int64 field_1B8;
  __int64 field_1C0;
  char field_1C8[16];
  __int64 CurrentVMT;
};

/* 205 */
union __declspec(align(16)) __m128i
{
  __int8 m128i_i8[16];
  __int16 m128i_i16[8];
  __int32 m128i_i32[4];
  __int64 m128i_i64[2];
  unsigned __int8 m128i_u8[16];
  unsigned __int16 m128i_u16[8];
  unsigned __int32 m128i_u32[4];
  unsigned __int64 m128i_u64[2];
};

/* 206 */
union __declspec(align(16)) __m128
{
  float m128_f32[4];
  unsigned __int64 m128_u64[2];
  __int8 m128_i8[16];
  __int16 m128_i16[8];
  __int32 m128_i32[4];
  __int64 m128_i64[2];
  unsigned __int8 m128_u8[16];
  unsigned __int16 m128_u16[8];
  unsigned __int32 m128_u32[4];
};

/* 3235 */
struct TBaseGUISkin_vmt_struct
{
  __int64 field_0;
  __int64 field_8;
  void *field_10;
  void *field_18;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *field_38;
  __int64 field_40;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  __int64 (__fastcall *TObject_Destroy)(TGUIForm *Form, __int64 a2);
  TGUIForm **(__fastcall *field_68)(TGUIForm *);
  __int64 (__fastcall *field_70)(__int64 *);
  __int64 (*field_78)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, __int64@<rcx>, _DWORD *@<rdi>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  void (*anonymous_3)();
  void (*anonymous_4)();
  void (*anonymous_5)();
  void (*anonymous_6)();
  void (*anonymous_7)();
  __int64 field_F0;
  char Name[16];
  void *field_108;
};

/* 3237 */
struct TGUITask_vmt_struct
{
  __int64 TGUITask_vmt;
  __int64 field_8;
  void *field_10;
  void *aTguitask_1;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *field_38;
  __int64 field_40;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  __int64 (__fastcall *TGUITask__Destroy)(__int64 *, __int64);
  TGUIForm **(__fastcall *field_68)(TGUIForm *);
  __int64 (__fastcall *field_70)(__int64 *);
  __int64 (*field_78)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, __int64@<rcx>, _DWORD *@<rdi>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  char (__fastcall *field_C8)(TGUIForm *, __int64);
  __int64 (__fastcall *field_D0)(__int64);
  void (*anonymous_3)();
  __int64 (__fastcall *TGUIForm__QueryDragDrop)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (__fastcall *TGUIForm__DoDragDrop)(__int64, __int64, unsigned int);
  __int64 (__fastcall *TGUIForm__DragDropped)(TGUIForm *a1, unsigned int a2, int a3);
  void (__fastcall *TGUIForm__AssignControls)(TGUIForm *, __int64, int, char);
  void (*anonymous_4)();
  __int64 (__fastcall *TGUIForm__CalcSizes)(TGUIForm *a1);
  void (*anonymous_5)();
  void (__fastcall *TGUIForm__SetVScroll)(TGUIForm *a1, float a2);
  __int64 (__fastcall *field_120)(__int64, int, int, _QWORD *);
  __int64 (__fastcall *TGUIForm__SetHitCode)(TGUIForm *a1, signed int a2);
  char (__fastcall *field_130)(TGUIForm *a1, int a2, _DWORD *a3, _DWORD *a4);
  __int64 (__fastcall *TGUIForm__CursorActivate)(TGUIForm *a1, __int64 a2, __int16 a3);
  __int64 (__fastcall *TGUIForm__CursorDeactivate)(__int64, __int64, unsigned __int16);
  __int64 (__fastcall *TGUIForm__CursorMove)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (*field_150)();
  void *field_158;
  void *field_160;
  void (__fastcall *TGUIForm__TimerActivate)(TGUIForm *a1);
  void (__fastcall *TGUIForm__FocusTimer)(TGUIForm *a1);
  __int64 (__fastcall *TGUIForm__SetFocusCode)(TGUIForm *a1, unsigned int a2);
  __int64 (__fastcall *TGUIForm__WheelScroll)(TGUIForm *, int);
  __int64 (__usercall *field_188)@<rax>(unsigned int@<edx>, __int64@<rcx>, unsigned int@<r8d>, unsigned int@<r13d>);
  __int64 (__fastcall *field_190)(__int64);
  void *field_198;
  __int64 (__fastcall *TGUIForm__DrawClient)(TGUIForm *a1);
  char (__fastcall *TGUIForm__FadeEffect)(TGUIForm *a1);
  void (__usercall *TGUIForm__Show)(TGUIForm *@<rcx>, __int64@<rdx>, __int64@<r11>);
  void (__fastcall *TGUIForm__Hide)(TGUIForm *a1);
  void (__fastcall *field_1C0)(__int64);
  __int64 field_1C8;
  char Name[16];
  void *CurrentVMT;
};

/* 3238 */
struct TAbstractToolTip_vmt_struct
{
  __int64 TAbstractToolTip_vmt;
  __int64 field_8;
  void *field_10;
  void *aTabstracttoolt_0;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *field_38;
  __int64 field_40;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  __int64 (__fastcall *TGUIForm__Destroy)(TGUIForm *Form, __int64 FlagUseCallbacks);
  TGUIForm **(__fastcall *field_68)(TGUIForm *);
  __int64 (__fastcall *field_70)(__int64 *);
  __int64 (*field_78)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, __int64@<rcx>, _DWORD *@<rdi>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  char (__fastcall *field_C8)(TGUIForm *Form, __int64 a2);
  __int64 (__fastcall *field_D0)(__int64);
  void (*anonymous_3)();
  __int64 (__fastcall *TGUIForm__QueryDragDrop)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (__fastcall *TGUIForm__DoDragDrop)(__int64, __int64, unsigned int);
  __int64 (__fastcall *TGUIForm__DragDropped)(TGUIForm *a1, unsigned int a2, int a3);
  void (__fastcall *TGUIForm__AssignControls)(TGUIForm *, __int64, int, char);
  void (*anonymous_4)();
  __int64 (__fastcall *TGUIForm__CalcSizes)(TGUIForm *a1);
  void (*anonymous_5)();
  void (__fastcall *TGUIForm__SetVScroll)(TGUIForm *a1, float a2);
  __int64 (__fastcall *field_120)(__int64, unsigned int, unsigned int, _QWORD *, __int64, __int64, __int64, __int64, unsigned int *);
  __int64 (__fastcall *TGUIForm__SetHitCode)(TGUIForm *a1, signed int a2);
  char (__fastcall *field_130)(TGUIForm *a1, int a2, _DWORD *a3, _DWORD *a4);
  __int64 (__fastcall *TGUIForm__CursorActivate)(TGUIForm *a1, __int64 a2, __int16 a3);
  __int64 (__fastcall *TGUIForm__CursorDeactivate)(__int64, __int64, unsigned __int16);
  __int64 (__fastcall *TGUIForm__CursorMove)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (*field_150)();
  void *field_158;
  void *field_160;
  void (__fastcall *TGUIForm__TimerActivate)(TGUIForm *a1);
  void (__fastcall *TGUIForm__FocusTimer)(TGUIForm *a1);
  __int64 (__fastcall *TGUIForm__SetFocusCode)(TGUIForm *a1, unsigned int a2);
  __int64 (__fastcall *TGUIForm__WheelScroll)(TGUIForm *, int);
  void (__fastcall *TGUIForm__MsgKeyDown)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (__fastcall *TGUIForm__Draw)(TGUIForm *a1);
  void *field_198;
  __int64 (__fastcall *TGUIForm__DrawClient)(TGUIForm *a1);
  char (__fastcall *TGUIForm__FadeEffect)(TGUIForm *a1);
  void (__usercall *TGUIForm__Show)(TGUIForm *@<rcx>, __int64@<rdx>, __int64@<r11>);
  void (__fastcall *TAbstractToolTip__Hide)(__int64);
  __int64 (__fastcall *TAbstractToolTip__TipShow)(__int64);
  __int64 field_1C8;
  char Name[17];
  char field_1E1[7];
  void *CurrentVMT;
};

/* 3241 */
struct TToolTip_vmt_struct
{
  __int64 TToolTip_vmt;
  __int64 field_8;
  void *field_10;
  void *aTtooltip_1;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *field_38;
  void *field_40;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  __int64 (__fastcall *TGUIForm__Destroy)(TGUIForm *Form, __int64 FlagUseCallbacks);
  TGUIForm **(__fastcall *field_68)(TGUIForm *);
  __int64 (__fastcall *field_70)(__int64 *);
  __int64 (*field_78)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, __int64@<rcx>, _DWORD *@<rdi>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  char (__fastcall *field_C8)(TGUIForm *Form, __int64 a2);
  __int64 (__fastcall *field_D0)(__int64);
  void (*anonymous_3)();
  __int64 (__fastcall *TGUIForm__QueryDragDrop)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (__fastcall *TGUIForm__DoDragDrop)(__int64, __int64, unsigned int);
  __int64 (__fastcall *TGUIForm__DragDropped)(TGUIForm *a1, unsigned int a2, int a3);
  void (__fastcall *TGUIForm__AssignControls)(TGUIForm *, __int64, int, char);
  void (*anonymous_4)();
  __int64 (__fastcall *TGUIForm__CalcSizes)(TGUIForm *a1);
  void (*anonymous_5)();
  void (__fastcall *TGUIForm__SetVScroll)(TGUIForm *a1, float a2);
  __int64 (__fastcall *field_120)(__int64, unsigned int, unsigned int, _QWORD *, __int64, __int64, __int64, __int64, unsigned int *);
  __int64 (__fastcall *TGUIForm__SetHitCode)(TGUIForm *a1, signed int a2);
  char (__fastcall *field_130)(TGUIForm *a1, int a2, _DWORD *a3, _DWORD *a4);
  __int64 (__fastcall *TGUIForm__CursorActivate)(TGUIForm *a1, __int64 a2, __int16 a3);
  __int64 (__fastcall *TGUIForm__CursorDeactivate)(__int64, __int64, unsigned __int16);
  __int64 (__fastcall *TGUIForm__CursorMove)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (*field_150)();
  void *field_158;
  void *field_160;
  void (__fastcall *TGUIForm__TimerActivate)(TGUIForm *a1);
  void (__fastcall *TGUIForm__FocusTimer)(TGUIForm *a1);
  __int64 (__fastcall *TGUIForm__SetFocusCode)(TGUIForm *a1, unsigned int a2);
  __int64 (__fastcall *TGUIForm__WheelScroll)(TGUIForm *, int);
  void (__fastcall *TGUIForm__MsgKeyDown)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  char (__fastcall *field_190)(__int64, __int64);
  void *field_198;
  __int64 (__fastcall *TGUIForm__DrawClient)(TGUIForm *a1);
  char (__fastcall *TGUIForm__FadeEffect)(TGUIForm *a1);
  void (__usercall *TGUIForm__Show)(TGUIForm *@<rcx>, __int64@<rdx>, __int64@<r11>);
  void (__fastcall *TAbstractToolTip__Hide)(__int64);
  void *field_1C0;
  __int64 field_1C8;
  char Name[16];
  void *CurrentVMT;
};

/* 3243 */
struct TMessageBox_vmt_struct
{
  __int64 field_0;
  __int64 field_8;
  void *field_10;
  void *aTmessagebox_0;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *field_38;
  __int64 field_40;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  __int64 (__fastcall *TGUIForm__Destroy)(TGUIForm *Form, __int64 FlagUseCallbacks);
  TGUIForm **(__fastcall *field_68)(TGUIForm *);
  __int64 (__fastcall *field_70)(__int64 *);
  __int64 (*field_78)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, __int64@<rcx>, _DWORD *@<rdi>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  char (__fastcall *field_C8)(TGUIForm *Form, __int64 a2);
  __int64 (__fastcall *field_D0)(__int64);
  void (*anonymous_3)();
  __int64 (__fastcall *TGUIForm__QueryDragDrop)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (__fastcall *TGUIForm__DoDragDrop)(__int64, __int64, unsigned int);
  __int64 (__fastcall *TGUIForm__DragDropped)(TGUIForm *a1, unsigned int a2, int a3);
  void (__fastcall *TGUIForm__AssignControls)(TGUIForm *, __int64, int, char);
  void (*anonymous_4)();
  __int64 (__fastcall *TGUIForm__CalcSizes)(TGUIForm *a1);
  void (*anonymous_5)();
  void (__fastcall *TGUIForm__SetVScroll)(TGUIForm *a1, float a2);
  __int64 (__fastcall *field_120)(__int64, unsigned int, unsigned int, _QWORD *, __int64, __int64, __int64, __int64, unsigned int *);
  __int64 (__fastcall *TGUIForm__SetHitCode)(TGUIForm *a1, signed int a2);
  char (__fastcall *field_130)(TGUIForm *a1, int a2, _DWORD *a3, _DWORD *a4);
  __int64 (__fastcall *TGUIForm__CursorActivate)(TGUIForm *a1, __int64 a2, __int16 a3);
  __int64 (__fastcall *TGUIForm__CursorDeactivate)(__int64, __int64, unsigned __int16);
  __int64 (__fastcall *TGUIForm__CursorMove)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (__fastcall *field_150)(_DWORD *, unsigned int);
  void *field_158;
  void *field_160;
  void (__fastcall *TGUIForm__TimerActivate)(TGUIForm *a1);
  void (__fastcall *TGUIForm__FocusTimer)(TGUIForm *a1);
  __int64 (__fastcall *TGUIForm__SetFocusCode)(TGUIForm *a1, unsigned int a2);
  __int64 (__fastcall *TGUIForm__WheelScroll)(TGUIForm *, int);
  __int64 (__fastcall *field_188)(_DWORD *, unsigned int, char);
  __int64 (__fastcall *TGUIForm__Draw)(TGUIForm *a1);
  void *field_198;
  __int64 (__fastcall *TGUIForm__DrawClient)(TGUIForm *a1);
  char (__fastcall *TGUIForm__FadeEffect)(TGUIForm *a1);
  void (__usercall *TGUIForm__Show)(TGUIForm *@<rcx>, __int64@<rdx>, __int64@<r11>);
  void (__fastcall *TGUIForm__Hide)(TGUIForm *a1);
  __int64 field_1C0;
  char Name[16];
  #197 *CurrentVMT;
};

/* 3244 */
struct TObject_vmt_struct
{
  __int64 TObject_vmt;
  __int64 field_8;
  void *field_10;
  void *aTobject_0;
  void *field_20;
  void *field_28;
  void *field_30;
  void *field_38;
  void *field_40;
  void *field_48;
  void *field_50;
  void *field_58;
  __int64 (__fastcall *TObject_Destroy)(TGUIForm *Form, __int64 a2);
  TGUIForm **(__fastcall *field_68)(TGUIForm *);
  __int64 (__fastcall *field_70)(__int64 *);
  __int64 (*field_78)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, _DWORD *@<rdi>, __int64@<rcx>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  __int64 field_C8;
  char Name[8];
  void *CurrentVMT;
};

/* 3245 */
struct Exception_vmt_struct
{
  __int64 Exception_vmt;
  __int64 field_8;
  void *field_10;
  void *aException;
  void *field_20;
  void *field_28;
  void *field_30;
  void *field_38;
  void *field_40;
  void *field_48;
  void *field_50;
  void *field_58;
  __int64 (__fastcall *TObject_Destroy)(TGUIForm *Form, __int64 a2);
  TGUIForm **(__fastcall *field_68)(TGUIForm *);
  __int64 (__fastcall *field_70)(__int64 *);
  __int64 (*System__TObject__SafeCallException)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, _DWORD *@<rdi>, __int64@<rcx>);
  bool (__fastcall *Gifimg__TGIFImage__Equals)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  void *field_C8;
  char Name[16];
  void *CurrentVMT;
};

/* 3246 */
struct TGUIColSwatch_vmt_struct
{
  __int64 TGUIColSwatch_vmt;
  __int64 field_8;
  void *field_10;
  void *aTguicolswatch;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *field_38;
  __int64 field_40;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  __int64 (__fastcall *TGUIForm__Destroy)(TGUIForm *Form, __int64 FlagUseCallbacks);
  TGUIForm **(__fastcall *field_68)(TGUIForm *);
  __int64 (__fastcall *field_70)(__int64 *);
  __int64 (*System__TObject__SafeCallException)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, _DWORD *@<rdi>, __int64@<rcx>);
  bool (__fastcall *Gifimg__TGIFImage__Equals)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  char (__fastcall *field_C8)(TGUIForm *Form, __int64 a2);
  __int64 (__fastcall *field_D0)(__int64);
  __int64 (__fastcall *field_D8)(__int64);
  __int64 (__fastcall *TGUIForm__QueryDragDrop)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (__fastcall *TGUIForm__DoDragDrop)(__int64, __int64, unsigned int);
  __int64 (__fastcall *TGUIForm__DragDropped)(TGUIForm *a1, unsigned int a2, int a3);
  void (__fastcall *TGUIForm__AssignControls)(TGUIForm *, __int64, int, char);
  __int64 (__fastcall *field_100)(__int64);
  __int64 (__fastcall *TGUIForm__CalcSizes)(TGUIForm *a1);
  __int64 (__fastcall *field_110)(__int64);
  void (__fastcall *TGUIForm__SetVScroll)(TGUIForm *a1, float a2);
  __int64 (__fastcall *field_120)(__int64, unsigned int, unsigned int, _QWORD *, __int64, __int64, __int64, __int64, __int64);
  __int64 (__fastcall *field_128)(__int64, signed int);
  char (__fastcall *field_130)(TGUIForm *a1, int a2, _DWORD *a3, _DWORD *a4);
  __int64 (__fastcall *field_138)(__int64, __int64, char);
  __int64 (__fastcall *TGUIForm__CursorDeactivate)(__int64, __int64, unsigned __int16);
  __int64 (__fastcall *field_148)(TGUIForm *, signed int, int);
  __int64 (__fastcall *field_150)(__int64, int);
  void *field_158;
  void *field_160;
  void (__fastcall *TGUIForm__TimerActivate)(TGUIForm *a1);
  void (__fastcall *TGUIForm__FocusTimer)(TGUIForm *a1);
  __int64 (__fastcall *TGUIForm__SetFocusCode)(TGUIForm *a1, unsigned int a2);
  __int64 (__fastcall *TGUIForm__WheelScroll)(TGUIForm *, int);
  void (__fastcall *TGUIForm__MsgKeyDown)(TGUIForm *a1, unsigned int a2, unsigned int a3);
  __int64 (__fastcall *TGUIForm__Draw)(TGUIForm *a1);
  void *field_198;
  __int64 (__fastcall *field_1A0)(__int64);
  char (__fastcall *TGUIForm__FadeEffect)(TGUIForm *a1);
  void (__usercall *TGUIForm__Show)(TGUIForm *@<rcx>, __int64@<rdx>, __int64@<r11>);
  void (__fastcall *TGUIForm__Hide)(TGUIForm *a1);
  __int64 field_1C0;
  char anonymous_3[16];
  void *anonymous_4;
};

/* 3247 */
struct CP_String_8
{
  __int64 CodePage;
  __int64 field_8;
  __int64 Size;
  char String[8];
};

/* 3249 */
struct CP_String_48
{
  __int64 CodePage;
  __int64 field_8;
  __int64 Size;
  char String[48];
};

/* 3250 */
struct CP_String_24
{
  __int64 CodePage;
  __int64 field_8;
  __int64 Size;
  char String[24];
};

/* 3252 */
struct CP_String_56
{
  __int64 CodePage;
  __int64 field_8;
  __int64 Size;
  char String[56];
};

/* 3253 */
struct CP_String_32
{
  __int64 CodePage;
  __int64 field_8;
  __int64 Size;
  char String[32];
};

/* 3254 */
struct __declspec(align(8)) ControlData
{
  __int16 ControlType;
  __declspec(align(4)) __int16 LocationX;
  __int16 LocationY;
  __int16 SizeX;
  __int16 SizeY;
  _BYTE gapC[2];
  __int16 ButtonOutlineEnhance;
  __int64 ButtonStringAddress;
  __int8 InteractionDisabled;
  __int8 TextAlign;
  __int8 TextSize;
  __int8 TextEnhance;
  __int8 ElementEnabled;
  __int8 DisabledElementIsHidden;
  __int8 TextHighlighted;
  __int64 ParentFormPointer;
  __int64 ButtonCustomCallbackPointer;
  __int64 DrawingHandlerPointer;
  char field_38[48];
};

/* 3255 */
struct ColourPicker_ControlDataArray
{
  ControlData field_0;
  ControlData field_68;
  ControlData field_D0;
  ControlData field_138;
  ControlData field_1A0;
  ControlData field_208;
  ControlData field_270;
  ControlData field_2D8;
  ControlData field_340;
  ControlData field_3A8;
  ControlData field_410;
  ControlData field_478;
  ControlData field_4E0;
  ControlData field_548;
  ControlData field_5B0;
  ControlData field_618;
  ControlData field_680;
};

/* 3292 */
struct CP_String_16
{
  __int64 CP_Val;
  __int64 Unk;
  __int64 Length;
  char String[16];
};

/* 3293 */
struct CP_String_120
{
  __int64 CP_Val;
  __int64 Unk;
  __int64 Length;
  char String[120];
};

/* 3294 */
struct CP_String_40
{
  __int64 CP_Val;
  __int64 Unk;
  __int64 Length;
  char String[40];
};

/* 3295 */
struct TA2f
{
  float field_0;
  float field_4;
};

/* 3296 */
#pragma pack(push, 8)
union tagELEMDESC::_7C8F4CED1424251743D09680A1A0B07D
{
  IDLDESC idldesc;
  PARAMDESC paramdesc;
};
#pragma pack(pop)

/* 3301 */
#pragma pack(push, 4)
union _IMAGE_RUNTIME_FUNCTION_ENTRY::_1FC7DDE9AB0EB2C3B18F286E3EAA9FDE
{
  DWORD UnwindInfoAddress;
  DWORD UnwindData;
};
#pragma pack(pop)

/* 3303 */
#pragma pack(push, 8)
union tagVARDESC::_E6274BD6A7149C9CC2413444FF769F0B
{
  ULONG oInst;
  VARIANT *lpvarValue;
};
#pragma pack(pop)

/* 3304 */
#pragma pack(push, 8)
union tagTYPEDESC::_AC700B6542D8071E244CADABF8A32897
{
  struct tagTYPEDESC *lptdesc;
  struct tagARRAYDESC *lpadesc;
  HREFTYPE hreftype;
};
#pragma pack(pop)

/* 4319 */
struct TA2w
{
  unsigned __int16 field_0;
  unsigned __int16 field_2;
};

/* 4320 */
struct TA4b
{
  unsigned __int8 field_0;
  unsigned __int8 field_1;
  unsigned __int8 field_2;
  unsigned __int8 field_3;
};

/* 4324 */
struct TSkillDat
{
  __int16 SklLvl;
  char TecDat0;
  char TecDat1;
  char TecDat2;
  char TecDat3;
  char TecDat4;
  char TecDat5;
};

/* 4325 */
struct TCharacterSkills
{
  TSkillDat field_0;
  TSkillDat field_8;
  TSkillDat field_10;
  TSkillDat field_18;
  TSkillDat field_20;
  TSkillDat field_28;
};

/* 4317 */
struct __declspec(align(8)) TSGCharacter
{
  void *v;
  __int32 f4_RefCount;
  char Name[16];
  __int8 gapC[12];
  char SurName;
  __int8 gap1C[12];
  _BYTE gap35[2];
  __unaligned __declspec(align(1)) TA2f Physique;
  __int8 gap2C[4];
  __unaligned __declspec(align(1)) float Height;
  __unaligned __declspec(align(1)) float Age;
  __unaligned __declspec(align(1)) TA2w f38_SkinCol;
  __unaligned __declspec(align(1)) __int32 HairStl;
  TA4b HairCol;
  __unaligned __declspec(align(1)) __int16 FaceStyle0;
  __unaligned __declspec(align(1)) __int16 FaceStyle1;
  char Voice;
  __int8 gap4C[12];
  _BYTE gap68[3];
  __unaligned __declspec(align(1)) float VoicePitch;
  __unaligned __declspec(align(1)) __int32 Profession;
  __unaligned __declspec(align(1)) __int32 Faction;
  __unaligned __declspec(align(1)) __int32 LastLocale;
  __unaligned __declspec(align(1)) __int32 EquipFlags;
  _BYTE gap7F[16];
  __int8 gap70[12];
  _BYTE gap9B[20];
  __int8 gap80[12];
  _BYTE gapBB[4];
  __unaligned __declspec(align(1)) __int64 Equips;
  _BYTE gapC7[64];
  __unaligned __declspec(align(1)) float Decomp;
  __unaligned __declspec(align(1)) __int32 CharStatus;
  __unaligned __declspec(align(1)) TA2w Health;
  __unaligned __declspec(align(1)) TA2w SFocus;
  __unaligned __declspec(align(1)) float CmbSkill;
  __unaligned __declspec(align(1)) __int32 UndeadVoice;
  __unaligned __declspec(align(1)) float Trustfulness;
  __unaligned __declspec(align(1)) float Bravery;
  __unaligned __declspec(align(1)) float BenAch;
  __unaligned __declspec(align(1)) float Neuroticism;
  __unaligned __declspec(align(1)) __int32 RNGSeed;
  __unaligned __declspec(align(1)) __int32 Experience;
  __unaligned __declspec(align(1)) TCharacterSkills Skill;
  __int8 gapC8[44];
  _BYTE gap193[4];
  __unaligned __declspec(align(1)) __int64 *Inventory;
  __unaligned __declspec(align(1)) __int32 fFC_Loadouts;
  _BYTE gap1A3[4];
  __unaligned __declspec(align(1)) __int64 *f100_Loadout;
  __unaligned __declspec(align(1)) __int32 f104_HomeLocale;
  __unaligned __declspec(align(1)) __int32 f108_HomeUID;
  __unaligned __declspec(align(1)) __int64 *f10C_ExtItems;
  __unaligned __declspec(align(1)) __int32 f110_CharHandle;
  __unaligned __declspec(align(1)) __int32 f114_CharUID;
  __unaligned __declspec(align(1)) __int32 f118_Roles;
  _BYTE gap1CB[4];
  __unaligned __declspec(align(1)) __int64 *f11C_Role;
  __unaligned __declspec(align(1)) __int32 f120_Conditions;
  _BYTE gap1DB[4];
  __unaligned __declspec(align(1)) __int64 *f124_Condition;
  __unaligned __declspec(align(1)) __int64 *f128_Relations2;
  __unaligned __declspec(align(1)) __int32 f138_Locales2;
  _BYTE gap1F3[4];
  __unaligned __declspec(align(1)) __int64 *f13C_Locale2;
  __unaligned __declspec(align(1)) __int64 *f140_CurLocale2;
  __unaligned __declspec(align(1)) __int32 f144_BuildInfo;
  __unaligned __declspec(align(1)) __int32 f148_XPAbsorbTime;
  __unaligned __declspec(align(1)) __int32 f14C_Powers;
  _BYTE gap213[4];
  __unaligned __declspec(align(1)) __int64 *f150_Power;
  __int8 f154_PowerBind;
  __int8 gap155[39];
  __unaligned __declspec(align(1)) __int32 f17C_PowerExp;
};

/* 4321 */
struct TGameItemRef
{
  __int64 iUID;
  __int64 IState;
};

/* 4322 */
struct THandEquipSet
{
  TGameItemRef field_0;
  TGameItemRef field_10;
};

/* 4323 */
struct TDAGameItemRef
{
  TGameItemRef field_0;
  TGameItemRef field_10;
  TGameItemRef field_20;
  TGameItemRef field_30;
  TGameItemRef field_40;
  TGameItemRef field_50;
  TGameItemRef field_60;
  TGameItemRef field_70;
};

/* 4326 */
struct TA20c
{
  unsigned __int32 field_0;
  unsigned __int32 field_4;
  unsigned __int32 field_8;
  unsigned __int32 field_C;
  unsigned __int32 field_10;
  unsigned __int32 field_14;
  unsigned __int32 field_18;
  unsigned __int32 field_1C;
  unsigned __int32 field_20;
  unsigned __int32 field_24;
  unsigned __int32 field_28;
  unsigned __int32 field_2C;
  unsigned __int32 field_30;
  unsigned __int32 field_34;
  unsigned __int32 field_38;
  unsigned __int32 field_3C;
  unsigned __int32 field_40;
  unsigned __int32 field_44;
  unsigned __int32 field_48;
  unsigned __int32 field_4C;
};

/* 4327 */
struct TA20q
{
  __int64 field_0;
  __int64 field_8;
  __int64 field_10;
  __int64 field_18;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  __int64 field_38;
  __int64 field_40;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  __int64 field_60;
  __int64 field_68;
  __int64 field_70;
  __int64 field_78;
  __int64 field_80;
  __int64 field_88;
  __int64 field_90;
  __int64 field_98;
};

/* 4328 */
struct TA2b
{
  unsigned __int8 field_0;
  unsigned __int8 field_1;
};

/* 4329 */
struct TA2c
{
  unsigned __int32 field_0;
  unsigned __int32 field_4;
};

/* 4330 */
struct TA2i
{
  int field_0;
  int field_4;
};

/* 4331 */
struct TA2s
{
  __int16 field_0;
  __int16 field_2;
};

/* 4332 */
struct TA2x2i
{
  signed __int32 g0_0;
  signed __int32 g0_1;
  signed __int32 g1_0;
  signed __int32 g1_1;
};

/* 4333 */
struct TA2x3f
{
  float g0_0;
  float g0_1;
  float g0_2;
  float g1_0;
  float g1_1;
  float g1_2;
};

/* 4334 */
struct TA2x3i
{
  signed __int32 g0_0;
  signed __int32 g0_1;
  signed __int32 g0_2;
  signed __int32 g1_0;
  signed __int32 g1_1;
  signed __int32 g1_2;
};

/* 4335 */
struct TA2x4b
{
  unsigned __int8 g0_0;
  unsigned __int8 g0_1;
  char g0_2;
  unsigned __int8 g0_3;
  unsigned __int8 g1_0;
  unsigned __int8 g1_1;
  unsigned __int8 g1_2;
  unsigned __int8 g1_3;
};

/* 4336 */
struct TA2x4f
{
  float g0_0;
  int g0_1;
  float g0_2;
  float g0_3;
  float g1_0;
  float g1_1;
  float g1_2;
  float g1_3;
};

/* 4337 */
struct TA3f
{
  float X;
  float Z;
  float Y;
};

/* 4338 */
struct TA3i
{
  signed __int32 field_0;
  signed __int32 field_4;
  signed __int32 field_8;
};

/* 4339 */
struct TA3x3f
{
  float g0_0;
  int g0_1;
  float g0_2;
  float g1_0;
  float g1_1;
  float g1_2;
  float g2_0;
  float g2_1;
  float g2_2;
};

/* 4340 */
struct TA3x4b
{
  unsigned __int8 g0_0;
  unsigned __int8 g0_1;
  unsigned __int8 g0_2;
  unsigned __int8 g0_3;
  unsigned __int8 g1_0;
  unsigned __int8 g1_1;
  unsigned __int8 g1_2;
  unsigned __int8 g1_3;
  unsigned __int8 g2_0;
  unsigned __int8 g2_1;
  unsigned __int8 g2_2;
  unsigned __int8 g2_3;
};

/* 4341 */
struct TA3x4f
{
  float g0_0;
  float g0_1;
  float g0_2;
  float g0_3;
  float g1_0;
  float g1_1;
  float g1_2;
  float g1_3_Length;
  float g2_0;
  float g2_1;
  float g2_2;
  float g2_3_Width;
};

/* 4342 */
struct TA3xP3f
{
  TA3f field_0;
  TA3f field_C;
  TA3f field_18;
};

/* 4343 */
struct TA4f
{
  float field_0;
  float field_4;
  float field_8;
  float field_C;
};

/* 4344 */
struct TA4i
{
  signed __int32 field_0;
  int field_4;
  signed __int32 field_8;
  signed __int32 field_C;
};

/* 4345 */
struct TA4x3f
{
  float g0_0;
  int g0_1;
  float g0_2;
  float g1_0;
  float g1_1;
  float g1_2;
  float g2_0;
  float g2_1;
  float g2_2;
  float g3_0;
  float g3_1;
  float g3_2;
};

/* 4346 */
struct TA4x4b
{
  unsigned __int8 g0_0;
  unsigned __int8 g0_1;
  unsigned __int8 g0_2;
  unsigned __int8 g0_3;
  unsigned __int8 g1_0;
  unsigned __int8 g1_1;
  unsigned __int8 g1_2;
  unsigned __int8 g1_3;
  unsigned __int8 g2_0;
  unsigned __int8 g2_1;
  unsigned __int8 g2_2;
  unsigned __int8 g2_3;
  unsigned __int8 g3_0;
  unsigned __int8 g3_1;
  unsigned __int8 g3_2;
  unsigned __int8 g3_3;
};

/* 4347 */
struct TA4x4f
{
  float g0_0;
  float g0_1;
  float g0_2;
  float g0_3;
  float g1_0;
  float g1_1;
  float g1_2;
  float g1_3;
  float g2_0;
  float g2_1;
  float g2_2;
  float g2_3;
  float g3_0;
  float g3_1;
  float g3_2;
  float g3_3;
};

/* 4348 */
struct TA8b
{
  unsigned __int8 field_0;
  unsigned __int8 field_1;
  unsigned __int8 field_2;
  unsigned __int8 field_3;
  unsigned __int8 field_4;
  unsigned __int8 field_5;
  unsigned __int8 field_6;
  unsigned __int8 field_7;
};

/* 4349 */
struct TA9i
{
  signed __int32 field_0;
  signed __int32 field_4;
  signed __int32 field_8;
  signed __int32 field_C;
  signed __int32 field_10;
  signed __int32 field_14;
  signed __int32 field_18;
  signed __int32 field_1C;
  signed __int32 field_20;
};

/* 4354 */
enum FormStyleEx_ENUM : __int8
{
  FormStyleEx_NotTransparent = 0x2,
  FormStyleEx_SingleOutline = 0x40,
  FormStyleEx_SingleHeaderLine = 0x80,
};

/* 4357 */
struct TGridPos
{
  TA2b field_0;
  __int16 field_2;
};

/* 4358 */
struct __declspec(align(8)) T3DNode
{
  T3DNode_vmt_struct *VMT;
  int NodeFlag;
  int ObjFlag;
  TA3f LCnt;
  int xmmFiller1;
  TA3f WCnt;
  float RExt;
  TA3f CBExt;
  char _GAP_3C[4];
  TA4x3f WrlMat;
  TA4x3f LclMat;
  TA4x4f GLMat;
  int VisBits;
  int ValidateID;
  TA4x3f InjMat;
  signed __int32 Children;
  _BYTE _GAP_11C[4];
  unsigned __int64 *Child;
  unsigned __int64 *Parent;
  unsigned __int64 *Sector;
  unsigned __int64 *InstanceOf;
  char Name[16];
  signed __int32 KFControllers;
  _BYTE _GAP_154[4];
  unsigned __int64 *KFController;
  TPhysicsControlller *PhysObj;
  signed __int32 Instances;
  _BYTE _GAP_16C[4];
  unsigned __int64 *Instance;
  TGridPos GridPos;
  int ObjHandle;
  int FunctionID;
  int NodeState;
  char _GAP_188[8];
  int RNGSeed;
  int GameClass;
  unsigned __int64 *MetaData;
  TA3f VisPos;
  float CScl;
  TAByte *PhysData;
  char ThreadLock;
  char LoopLock;
  char FEnabled;
  char WorldData;
  _BYTE _GAP_1BC[4];
  unsigned __int64 *ExtData;
};

/* 4386 */
struct T3DNode_vmt_struct
{
  __int64 T3DNode_vmt;
  __int64 field_8;
  void *field_10;
  void *aT3dnode;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *aT3dnode_1;
  void *T3DNode_DynArray;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  void (__fastcall *field_60)(TGUIForm *, __int64);
  TGUIForm **(__fastcall *TObject__NewInstance)(TGUIForm *);
  __int64 (__fastcall *TObject__FreeInstance)(__int64 *);
  __int64 (*TObject__SafeCallException)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, _DWORD *@<rdi>, __int64@<rcx>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  __int64 (__fastcall *field_C8)(__int64, __int64, char);
  __int64 (__fastcall *field_D0)(__int64);
  __int64 (__fastcall *field_D8)(__int64);
  T3DNode *(__fastcall *T3DNode__InstanceDisable)(T3DNode *);
  __int64 (__fastcall *field_E8)(__int64);
  __int64 (__fastcall *field_F0)(__int64);
  T3DNode *(__fastcall *T3DNode__CreateInstance)(__int64 a1);
  __int64 field_100;
  char anonymous_3[8];
  void *field_110;
};

/* 4407 */
struct __unaligned __declspec(align(4)) TPhysicsControlller
{
  void *VMT;
  unsigned __int32 PCFlags;
  unsigned __int32 PCState;
  unsigned __int32 SimStep;
  T3DNode *CObj;
  __int64 InstanceOf;
  TA3f CrdShft;
  signed __int32 GrdLoc;
  TPhysicsControlller *GrdPrv;
  TPhysicsControlller *GrdNxt;
  TPhysPrioHandle ColHandle;
};

/* 4362 */
struct TAByte
{
  char Array[8];
};

/* 4408 */
struct TPhysPrioHandle
{
  __int16 I;
  __int16 R;
  int C;
};

/* 4359 */
struct CP_String_160
{
};

/* 4360 */
struct __declspec(align(8)) TGeometry
{
  TGeometry_vmt_struct *VMT;
  int NodeFlag;
  int ObjFlag;
  TA3f LCnt;
  int xmmFiller1;
  TA3f WCnt;
  float RExt;
  TA3f CBExt;
  char _GAP_3C[4];
  TA4x3f WrlMat;
  TA4x3f LclMat;
  TA4x4f GLMat;
  unsigned __int32 VisBits;
  int ValidateID;
  TA4x3f InjMat;
  signed __int32 Children;
  char _GAP_11C[4];
  unsigned __int64 *Child;
  unsigned __int64 *Parent;
  unsigned __int64 *Sector;
  unsigned __int64 *InstanceOf;
  char Name[16];
  signed __int32 KFControllers;
  char _GAP_154[4];
  unsigned __int64 *KFController;
  TPhysicsControlller *PhysObj;
  signed __int32 Instances;
  char _GAP_16C[4];
  unsigned __int64 *Instance;
  TGridPos GridPos;
  int ObjHandle;
  int FunctionID;
  int NodeState;
  char _GAP_188[8];
  int RNGSeed;
  int GameClass;
  unsigned __int64 *MetaData;
  TA3f VisPos;
  float CScl;
  TAByte *PhysData;
  char ThreadLock;
  char LoopLock;
  char FEnabled;
  char WorldData;
  char _GAP_1BC[4];
  unsigned __int64 *ExtData;
  signed __int32 SubObjs;
  char _GAP_1CC[4];
  unsigned __int64 *SubObj;
  signed __int32 OpqSubObjs;
  signed __int32 FirstLgt;
  unsigned __int64 *LgtLst;
  char _GAP_1E8[16];
  TA3f MaxLitOut;
  unsigned __int32 GeomFlag;
  signed __int32 VControllers;
  char _GAP_20C[4];
  unsigned __int64 *VController;
  void *GeomCtrl;
  float SdwOffset;
  float SdwBias;
  float MaxFade;
  float Fade;
  unsigned __int32 GeomState;
  int RngSeed;
  float EmisScale;
  char _GAP_23C[4];
  void *OnCompile;
  char _GAP_248[8];
  int CustomInstancing;
  char _GAP_254[4];
  void *ShadowExclude;
};

/* 4364 */
struct TGeometry_vmt_struct
{
  __int64 Size;
  __int64 InvSize;
  void *field_10;
  void *pName;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *field_38;
  void *TGeometry_DynArray;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  void (__fastcall *field_60)(TGUIForm *, __int64);
  TGUIForm **(__fastcall *TObject__NewInstance)(TGUIForm *);
  __int64 (__fastcall *TObject__FreeInstance)(__int64 *);
  __int64 (*TObject__SafeCallException)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, _DWORD *@<rdi>, __int64@<rcx>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  __int64 (__fastcall *field_C8)(__int64, __int64, char);
  __int64 (__fastcall *field_D0)(__int64);
  __int64 (__fastcall *field_D8)(__int64);
  void (__fastcall *field_E0)(__int64);
  void (__fastcall *field_E8)(__int64);
  __int64 (__fastcall *field_F0)(__int64);
  _DWORD *(__fastcall *field_F8)(__int64);
  __int64 field_100;
  char Name[16];
  void *field_118;
};

/* 4366 */
struct TLightListItem
{
  float Int;
  signed __int32 Prv;
  signed __int32 Nxt;
  unsigned __int32 SdwVis;
  unsigned __int64 *Lgt;
};

/* 4365 */
struct TALightListItem
{
  TLightListItem field_0[14];
};

/* 4367 */
struct TLightAlias
{
};

/* 4391 */
struct TGridEntry
{
  TA2i GrdCrd;
  TGridEntry *GrdPrv;
  TGridEntry *GrdNxt;
  TMesh *Mesh;
};

/* 4369 */
struct __declspec(align(8)) TMesh
{
  TMesh_vmt_struct *VMT;
  int NodeFlag;
  int ObjFlag;
  TA3f LCnt;
  int xmmFiller1;
  TA3f WCnt;
  float RExt;
  TA3f CBExt;
  char _GAP_3C[4];
  TA4x3f WrlMat;
  TA4x3f LclMat;
  TA4x4f GLMat;
  unsigned __int32 VisBits;
  unsigned __int32 ValidateID;
  TA4x3f InjMat;
  signed __int32 Children;
  char _GAP_11C[4];
  unsigned __int64 *Child;
  unsigned __int64 *Parent;
  unsigned __int64 *Sector;
  unsigned __int64 *InstanceOf;
  char Name[16];
  signed __int32 KFControllers;
  char _GAP_154[4];
  unsigned __int64 *KFController;
  TPhysicsControlller *PhysObj;
  signed __int32 Instances;
  char _GAP_16C[4];
  unsigned __int64 *Instance;
  TGridPos GridPos;
  int ObjHandle;
  int FunctionID;
  int NodeState_77777;
  int NodeState;
  char _GAP_18C[4];
  int RNGSeed;
  int GameClass;
  unsigned __int64 *MetaData;
  TA3f VisPos;
  float CScl;
  TAByte *PhysData;
  char ThreadLock;
  char LoopLock;
  char FEnabled;
  char WorldData;
  char _GAP_1BC[4];
  unsigned __int64 *ExtData;
  signed __int32 SubObjs;
  char _GAP_1CC[4];
  unsigned __int64 *SubObj;
  signed __int32 OpqSubObjs;
  signed __int32 FirstLgt;
  unsigned __int64 *LgtLst;
  char _GAP_1E8[16];
  TA3f MaxLitOut;
  unsigned __int32 GeomFlag;
  signed __int32 VControllers;
  char _GAP_20C[4];
  unsigned __int64 *VController;
  void *GeomCtrl;
  float SdwOffset;
  float SdwBias;
  float MaxFade;
  float Fade;
  unsigned __int32 GeomState;
  int RngSeed;
  float EmisScale;
  char _GAP_23C[4];
  void *OnCompile;
  char _GAP_248[8];
  int CustomInstancing;
  char _GAP_254[4];
  void *ShadowExclude;
  signed __int32 Faces;
  signed __int32 VrtMaps;
  TAVertexMapping *VrtMap;
  signed __int32 VrtDats;
  char _GAP_274[4];
  TAVertexData *VrtDat;
  signed __int32 CmpVrts;
  char _GAP_284[4];
  TAA3i *FcInd;
  TAByte *FcFlag;
  TAdword *SmoothGrp;
  TAFace *cFace;
  TAFaceVRef *FGrp;
  TAnInt *VFRef;
  TAnInt *NFRef;
  TAInt *SmoothFace;
  signed __int32 SubDiv;
  __declspec(align(8)) signed __int32 SubDiv2;
  char _GAP_2D4[4];
  TObject *FkdTree;
  unsigned __int32 EColBits;
  char _GAP_2E4[4];
  TAInt *MatID;
  TAdword *FaceID;
  unsigned __int32 MeshFlag;
  char _GAP_2FC[4];
  unsigned __int64 *MorphData;
  TGridEntry GrdEntry;
  int GrdEntrs;
  char _GAP_32C[4];
  TAGridEntry *GrdEnAr;
  signed __int32 Voxels;
  char _GAP_33C[4];
  TAA3f *LVoxel;
  TAA2w *GVoxel;
  signed __int32 HVoxels;
  char _GAP_354[4];
  TAA3f *HVoxel;
  char _GAP_360[4];
  signed __int32 PathWgt;
  TAA4b *BloodBuf;
  char _GAP_370[16];
  signed __int32 Modifiers;
  char _GAP_384[4];
  TAMeshModifier *Modifier;
  void *SphereIntProc;
  void *Unk_1;
  void *RayIntProcC;
  void *Unk_2;
  void *RayIntProcCT;
  void *Unk_3;
  void *RayIntProc2S;
  void *Unk_4;
  void *SphereSweepProc;
  void *Unk_5;
  void *field_3E0;
  void *Unk_6;
  void *SphereSweepColProc;
  void *Unk_7;
  void *field_400;
  void *Unk_8;
};

/* 4385 */
struct TMesh_vmt_struct
{
  __int64 TMesh_vmt;
  __int64 field_8;
  void *field_10;
  void *aTmesh;
  __int64 field_20;
  __int64 field_28;
  __int64 field_30;
  void *ParentClassDynArrayDeclare;
  void *CurrentClassDynArrayDeclare;
  __int64 field_48;
  __int64 field_50;
  __int64 field_58;
  void (__fastcall *field_60)(TGUIForm *, __int64);
  TGUIForm **(__fastcall *TObject__NewInstance)(TGUIForm *);
  __int64 (__fastcall *TObject__FreeInstance)(__int64 *);
  __int64 (*TObject__SafeCallException)();
  void (*nullsub_5)();
  void (*anonymous_0)();
  void (*anonymous_1)();
  void (*anonymous_2)();
  __int64 (__usercall *field_A0)@<rax>(_DWORD *@<rdx>, __int64 *@<rcx>, _DWORD *@<rdi>);
  __int64 (__usercall *field_A8)@<rax>(unsigned __int8 *@<rdx>, _DWORD *@<rdi>, __int64@<rcx>);
  bool (__fastcall *field_B0)(__int64, __int64);
  __int64 (__fastcall *field_B8)(__int64);
  void (__fastcall *field_C0)(__int64 *, __int64 *);
  __int64 (__fastcall *field_C8)(__int64, __int64, char);
  void (__fastcall *field_D0)(TMesh *a1);
  __int64 (__fastcall *field_D8)(__int64);
  void (__fastcall *field_E0)(__int64);
  __int64 (__fastcall *(__fastcall *field_E8)(__int64))(__int64, __int64);
  void (__fastcall *TMesh__Precompile)(TMesh *a1);
  __int64 (__fastcall *field_F8)(__int64);
  void (__fastcall *TMesh__CreateGeometry)(TMesh *);
  __int64 field_108;
  char anonymous_3[8];
  void *field_118;
};

/* 4380 */
struct TVertexMapping
{
  __int32 Flags;
  char _GAP_4[4];
  TAInt *SrcInd;
};

/* 4379 */
struct __declspec(align(8)) TAVertexMapping
{
  TVertexMapping Array[2];
};

/* 4384 */
struct TVertexData
{
  unsigned __int32 MapFlg;
  unsigned __int32 DatFlg;
  signed __int32 VMap;
  signed __int32 Entries;
  TAA2f *Data;
};

/* 4383 */
struct __declspec(align(8)) TAVertexData
{
  TVertexData Array[2];
};

/* 4373 */
struct TAA3i
{
  TA3i Array[2];
};

/* 4374 */
struct TAdword
{
  int field_0[];
};

/* 4376 */
struct TFace
{
  TA3xP3f vp;
  TA4f fn;
};

/* 4375 */
struct TAFace
{
  TFace Face[];
};

/* 4377 */
struct __declspec(align(4)) TAFaceVRef
{
  TA2i Array[8];
};

/* 4378 */
struct TAnInt
{
  int Array[4];
};

/* 4381 */
struct __declspec(align(4)) TAInt
{
  int Array[10];
};

/* 4372 */
struct TObject
{
  void *VMT;
};

/* 4392 */
struct TAGridEntry
{
  TGridEntry Array[2];
};

/* 4390 */
struct TAA3f
{
  TA3f Array[2];
};

/* 4389 */
struct TAA2w
{
  TA2w Array[2];
};

/* 4393 */
struct TAA4b
{
  char field_0[4];
};

/* 4395 */
struct TAMeshModifier
{
  __int64 Array[2];
};

/* 4388 */
struct TAA2f
{
  TA2f Array[10];
};

/* 4371 */
struct __declspec(align(8)) TSubObject
{
  TGeometry_vmt_struct *VMT;
  int NodeFlag;
  int ObjFlag;
  TA3f LCnt;
  int xmmFiller1;
  TA3f WCnt;
  float RExt;
  TA3f CBExt;
  char _GAP_3C[4];
  TA4x3f WrlMat;
  TA4x3f LclMat;
  TA4x4f GLMat;
  int VisBits;
  int ValidateID;
  TA4x3f InjMat;
  signed __int32 Children;
  char _GAP_11C[4];
  unsigned __int64 *Child;
  unsigned __int64 *Parent;
  unsigned __int64 *Sector;
  unsigned __int64 *InstanceOf;
  char Name[16];
  signed __int32 KFControllers;
  char _GAP_154[4];
  unsigned __int64 *KFController;
  TPhysicsControlller *PhysObj;
  signed __int32 Instances;
  char _GAP_16C[4];
  unsigned __int64 *Instance;
  TGridPos GridPos;
  int ObjHandle;
  int FunctionID;
  int NodeState;
  char _GAP_188[8];
  int RNGSeed;
  int GameClass;
  unsigned __int64 *MetaData;
  TA3f VisPos;
  float CScl;
  TAByte *PhysData;
  char ThreadLock;
  char LoopLock;
  char FEnabled;
  char WorldData;
  char _GAP_1BC[4];
  unsigned __int64 *ExtData;
  signed __int32 SubObjs;
  char _GAP_1CC[4];
  unsigned __int64 *SubObj;
  signed __int32 OpqSubObjs;
  signed __int32 FirstLgt;
  unsigned __int64 *LgtLst;
  char _GAP_1E8[16];
  TA3f MaxLitOut;
  unsigned __int32 GeomFlag;
  signed __int32 VControllers;
  char _GAP_20C[4];
  unsigned __int64 *VController;
  void *GeomCtrl;
  float SdwOffset;
  float SdwBias;
  float MaxFade;
  float Fade;
  unsigned __int32 GeomState;
  int RngSeed;
  float EmisScale;
  char _GAP_23C[4];
  void *OnCompile;
  char _GAP_248[8];
  int CustomInstancing;
  char _GAP_254[4];
  void *ShadowExclude;
};

/* 4382 */
struct PAByte
{
  TAByte *Pointer;
};

/* 4394 */
struct TMeshModifier
{
  unsigned __int32 ModID;
};

/* 4397 */
struct T3DViewport
{
  TGUIForm_vmt_struct *FormVMT;
  int CAp0;
  int CAp1;
  float HS_Stp;
  char _GAP_14[4];
  int StoreState;
  char _GAP_1C[4];
  __int32 PosX;
  int PosY;
  __int32 Width;
  __int32 Height;
  int Border;
  int BorderEx;
  int BorderIn;
  int ClientBtm;
  int ClientTop;
  int ClientRgt;
  int ClientSpcX;
  int ClientSpcY;
  int BaseBorder;
  int MinHeight;
  int MinWidth;
  int Style;
  int State;
  FormStyle_ENUM FormStyle;
  char SpcType;
  char FormStyleEx;
  char _GAP_67;
  int HitCode;
  int CaptureCode;
  int FocusCode;
  char _GAP_74[4];
  char CaptureHit;
  char FVisible;
  char _GAP_7A[6];
  void *pCaption;
  char _GAP_88[8];
  signed __int32 Controls;
  char _GAP_94[4];
  TAControlArray *pControl;
  void *pParent;
  int Children;
  char _GAP_AC[4];
  void *pChild;
  int FormClassID;
  char _GAP_BC[4];
  void *Owner;
  int ClntQds;
  char _GAP_CC[4];
  void *pClntQd;
  int HS_Pos;
  int VS_Pos;
  float VS_Stp;
  char _GAP_E4[4];
  void *BkCol0;
  void *BkCol1;
  char _GAP_F8[8];
  __int32 Glyph;
  char _GAP_104[4];
  void *pOnClose;
  void *pOnScroll;
  char OwnsControls;
  char FreeOnClose;
  char Closing;
  char WantsFree;
  char AniState;
  char _GAP_11D[3];
  __int64 AniTime;
  void *AniType;
  void *Task;
  int ModalResult;
  char _GAP_13C[28];
  signed __int32 CursorActions;
  char _GAP_15C[4];
  TCursorAction *CursorAction;
  TCursorAction *CurCursorAction;
  float Stereo0fs;
  char _GAP_174[4];
  __int64 OnWheelScroll;
  __int16 _Unk_180;
  char _GAP_182[6];
  void *NavCameraControl;
  void *CurActUpd;
  unsigned __int32 ViewportID;
  TA2i ViewportSize;
  char _GAP_1A4[4];
  void *View;
  char _GAP_1B0[16];
  void *Camera;
  char _GAP_1C8[4];
  unsigned __int32 ValidateID;
  unsigned __int32 FrameCounter;
  int LastFPSTime;
  __int64 FPSText;
  __int64 LastFrameTime;
  __int64 ftimedelta;
  void *TScene;
  void *NavControl;
  void *CamControl;
  void *OnDestroy;
  void *_Unk_210;
  void *OnDrawOverlays;
};

/* 4398 */
struct TCursorAction
{
  unsigned __int32 Triggers;
  char _GAP_4[4];
  void *Action;
};

/* 4399 */
struct TACursorAction
{
  char Array[2];
};

/* 4400 */
struct __unaligned __declspec(align(4)) TGameEditControls_TODO
{
  void *VMT;
  int CtrlState;
  char _GAP_C[4];
  TMesh *InputSel;
  T3DViewport *View;
  unsigned __int32 UseItemUID;
  char _GAP_24[4];
  TGUIForm *UseItemSrc;
  T3DNode *UseItemNod;
  int UseItemHnd;
  TA4x3f MoveStartPts;
  float IntHgt;
  float IntDst;
  TA3f IntPos;
  TA3f IntPos2;
  TA4x3f IntPln;
  unsigned __int32 UpdateItemMode;
  unsigned __int32 UpdateItemOUID;
};

/* 4401 */
struct __declspec(align(8)) TMesh_backup
{
  TMesh_vmt_struct *VMT;
  int NodeFlag;
  int ObjFlag;
  TA3f LCnt;
  int xmmFiller1;
  TA3f WCnt;
  float RExt;
  TA3f CBExt;
  char _GAP_3C[4];
  TA4x3f WrlMat;
  TA4x3f LclMat;
  TA4x4f GLMat;
  unsigned __int32 VisBits;
  unsigned __int32 ValidateID;
  TA4x3f InjMat;
  signed __int32 Children;
  char _GAP_11C[4];
  unsigned __int64 *Child;
  unsigned __int64 *Parent;
  unsigned __int64 *Sector;
  unsigned __int64 *InstanceOf;
  char Name[16];
  signed __int32 KFControllers;
  char _GAP_154[4];
  unsigned __int64 *KFController;
  unsigned __int64 *PhysObj;
  signed __int32 Instances;
  char _GAP_16C[4];
  unsigned __int64 *Instance;
  TGridPos GridPos;
  int ObjHandle;
  int FunctionID;
  int NodeState;
  char _GAP_188[8];
  int RNGSeed;
  int GameClass;
  unsigned __int64 *MetaData;
  TA3f VisPos;
  float CScl;
  TAByte *PhysData;
  char ThreadLock;
  char LoopLock;
  char FEnabled;
  char WorldData;
  char _GAP_1BC[4];
  unsigned __int64 *ExtData;
  signed __int32 SubObjs;
  char _GAP_1CC[4];
  unsigned __int64 *SubObj;
  signed __int32 OpqSubObjs;
  signed __int32 FirstLgt;
  unsigned __int64 *LgtLst;
  char _GAP_1E8[16];
  TA3f MaxLitOut;
  unsigned __int32 GeomFlag;
  signed __int32 VControllers;
  char _GAP_20C[4];
  unsigned __int64 *VController;
  void *GeomCtrl;
  float SdwOffset;
  float SdwBias;
  float MaxFade;
  float Fade;
  unsigned __int32 GeomState;
  int RngSeed;
  float EmisScale;
  char _GAP_23C[4];
  void *OnCompile;
  char _GAP_248[8];
  int CustomInstancing;
  char _GAP_254[4];
  void *ShadowExclude;
  signed __int32 Faces;
  signed __int32 VrtMaps;
  TAVertexMapping *VrtMap;
  signed __int32 VrtDats;
  char _GAP_274[4];
  TAVertexData *VrtDat;
  signed __int32 CmpVrts;
  char _GAP_284[4];
  TAA3i *FcInd;
  TAByte *FcFlag;
  TAdword *SmoothGrp;
  TAFace *cFace;
  char _GAP_2A8[8];
  TAFaceVRef *FGrp;
  TAnInt *VFRef;
  TAnInt *NFRef;
  TAInt *SmoothFace;
  signed __int32 SubDiv;
  char _GAP_2D4[4];
  TObject *FkdTree;
  unsigned __int32 EColBits;
  char _GAP_2E4[4];
  TAInt *MatID;
  TAdword *FaceID;
  unsigned __int32 MeshFlag;
  char _GAP_2FC[4];
  unsigned __int64 *MorphData;
  TGridEntry GrdEntry;
  int GrdEntrs;
  char _GAP_32C[4];
  TAGridEntry *GrdEnAr;
  signed __int32 Voxels;
  char _GAP_33C[4];
  TAA3f *LVoxel;
  TAA2w *GVoxel;
  signed __int32 HVoxels;
  char _GAP_354[4];
  TAA3f *HVoxel;
  char _GAP_360[4];
  signed __int32 PathWgt;
  TAA4b *BloodBuf;
  char _GAP_370[16];
  signed __int32 Modifiers;
  char _GAP_384[4];
  TAMeshModifier *Modifier;
  void *SphereIntProc;
  void *Unk_1;
  void *RayIntProcC;
  void *Unk_2;
  void *RayIntProcCT;
  void *Unk_3;
  void *RayIntProc2S;
  void *Unk_4;
  void *SphereSweepProc;
  void *Unk_5;
  void *field_3E0;
  void *Unk_6;
  void *SphereSweepColProc;
  void *Unk_7;
  void *field_400;
  void *Unk_8;
};

/* 4402 */
struct TGUIItemContainer
{
  TGUIForm_vmt_struct *FormVMT;
  int CAp0;
  int CAp1;
  float HS_Stp;
  char _GAP_14[4];
  int StoreState;
  char _GAP_1C[4];
  __int32 PosX;
  int PosY;
  __int32 Width;
  __int32 Height;
  int Border;
  int BorderEx;
  int BorderIn;
  int ClientBtm;
  int ClientTop;
  int ClientRgt;
  int ClientSpcX;
  int ClientSpcY;
  int BaseBorder;
  int MinHeight;
  int MinWidth;
  int Style;
  int State;
  FormStyle_ENUM FormStyle;
  char SpcType;
  char FormStyleEx;
  char _GAP_67;
  int HitCode;
  int CaptureCode;
  int FocusCode;
  char _GAP_74[4];
  char CaptureHit;
  char FVisible;
  char _GAP_7A[6];
  void *pCaption;
  char _GAP_88[8];
  signed __int32 Controls;
  char _GAP_94[4];
  TAControlArray *pControl;
  void *pParent;
  int Children;
  char _GAP_AC[4];
  void *pChild;
  int FormClassID;
  char _GAP_BC[4];
  void *Owner;
  int ClntQds;
  char _GAP_CC[4];
  void *pClntQd;
  int HS_Pos;
  int VS_Pos;
  float VS_Stp;
  char _GAP_E4[4];
  void *BkCol0;
  void *BkCol1;
  char _GAP_F8[8];
  __int32 Glyph;
  char _GAP_104[4];
  void *pOnClose;
  void *pOnScroll;
  char OwnsControls;
  char FreeOnClose;
  char Closing;
  char WantsFree;
  char AniState;
  char _GAP_11D[3];
  __int64 AniTime;
  void *AniType;
  void *Task;
  int ModalResult;
  char padding[28];
  signed __int32 Items;
  char _GAP_15C[4];
  __int64 Item;
};

/* 4403 */
struct TContainerItem
{
  TA2i Pos;
  unsigned __int32 CItmI;
  unsigned __int32 IHandle;
  unsigned __int32 IState;
  unsigned __int32 Flags;
};

/* 4404 */
struct TAContainerItem
{
  TContainerItem Array[2];
};

/* 4405 */
struct TSGItemContainer
{
  signed __int32 CItems;
  char _GAP_4[4];
  TSGContainerItem *CItem;
};

/* 4406 */
struct TSGContainerItem
{
  unsigned __int32 ItmUID;
  unsigned __int32 ItmState;
  TA2f ItmPos;
};

/* 4409 */
struct __unaligned __declspec(align(4)) TTetraRBD_TODO
{
  void *VMT;
  unsigned __int32 PCFlags;
  unsigned __int32 PCState;
  unsigned __int32 SimStep;
  T3DNode *CObj;
  __int64 InstanceOf;
  TA3f CrdShft;
  signed __int32 GrdLoc;
  TTetraRBD_TODO *GrdPrv;
  TTetraRBD_TODO *GrdNxt;
  TPhysPrioHandle ColHandle;
  float _Unk_4C;
  float _Unk_50;
  TA4x3f IDPoint;
  TA2x3f Cnstrnt;
  TA4f PCnstrnt;
  TA4x3f CrPoint;
  TA4x3f PrPoint;
};

/* 4410 */
struct CP_String_1592
{
};

/* 4411 */
enum GL_EnableCap
{
  GL_POINT_SMOOTH = 0xB10,
  GL_LINE_SMOOTH = 0xB20,
  GL_CULL_FACE = 0xB44,
  GL_LIGHTING = 0xB50,
  GL_COLOR_MATERIAL = 0xB57,
  GL_FOG = 0xB60,
  GL_DEPTH_TEST_EC = 0xB71,
  GL_STENCIL_TEST = 0xB90,
  GL_NORMALIZE = 0xBA1,
  GL_ALPHA_TEST = 0xBC0,
  GL_DITHER = 0xBD0,
  GL_BLEND = 0xBE2,
  GL_COLOR_LOGIC_OP = 0xBF2,
  GL_SCISSOR_TEST = 0xC11,
  GL_TEXTURE_2D = 0xDE1,
  GL_POLYGON_OFFSET_FILL = 0x8037,
  GL_RESCALE_NORMAL = 0x803A,
  GL_VERTEX_ARRAY = 0x8074,
  GL_NORMAL_ARRAY = 0x8075,
  GL_COLOR_ARRAY = 0x8076,
  GL_TEXTURE_COORD_ARRAY = 0x8078,
  GL_MULTISAMPLE = 0x809D,
  GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E,
  GL_SAMPLE_ALPHA_TO_ONE = 0x809F,
  GL_SAMPLE_COVERAGE = 0x80A0,
};

/* 4412 */
enum GL_ClearBufferMask
{
  GL_DEPTH_BUFFER_BIT = 0x100,
  GL_STENCIL_BUFFER_BIT = 0x400,
  GL_COLOR_BUFFER_BIT = 0x4000,
};

/* 4413 */
enum GL_BeginMode
{
  GL_POINTS = 0x0,
  GL_LINES = 0x1,
  GL_LINE_LOOP = 0x2,
  GL_LINE_STRIP = 0x3,
  GL_TRIANGLES = 0x4,
  GL_TRIANGLE_STRIP = 0x5,
  GL_TRIANGLE_FAN = 0x6,
  GL_QUADS = 0x7,
  GL_QUAD_STRIP = 0x8,
  GL_POLYGON = 0x9,
};

/* 4414 */
enum GL_DepthFunction
{
  GL_NEVER = 0x200,
  GL_LESS = 0x201,
  GL_EQUAL = 0x202,
  GL_LEQUAL = 0x203,
  GL_GREATER = 0x204,
  GL_NOTEQUAL = 0x205,
  GL_GEQUAL = 0x206,
  GL_ALWAYS = 0x207,
  GL_DEPTH_RANGE = 0xB70,
  GL_DEPTH_TEST_DF = 0xB71,
  GL_DEPTH_WRITEMASK = 0xB72,
  GL_DEPTH_CLEAR_VALUE = 0xB73,
  GL_DEPTH_BITS = 0xD56,
  GL_DEPTH_COMPONENT = 0x1902,
};

/* 4415 */
enum GL_CullFaceMode
{
  GL_FRONT = 0x404,
  GL_BACK = 0x405,
  GL_FRONT_AND_BACK = 0x408,
};

